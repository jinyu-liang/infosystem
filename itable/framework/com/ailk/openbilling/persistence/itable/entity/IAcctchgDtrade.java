package com.ailk.openbilling.persistence.itable.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 */
@NotModified
@Entity
@Table(schema="JD",name="I_ACCTCHG_DTRADE")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"soNbr","userId","oldAcctId","newAcctId","changeDate","sts","inDate","updateDate"})
public class IAcctchgDtrade extends DataObject{


	/**
	 * 接口流水号
	 */
	@Id
	@Column(name="SO_NBR",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="soNbr")
	private Long soNbr;

	@Column(name="USER_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="userId")
	private Long userId;

	@Column(name="OLD_ACCT_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="oldAcctId")
	private Long oldAcctId;

	@Column(name="NEW_ACCT_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="newAcctId")
	private Long newAcctId;

	@Column(name="CHANGE_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="changeDate")
	private Date changeDate;

	@Column(name="STS",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="sts")
	private Integer sts;

	@Column(name="IN_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="inDate")
	private Date inDate;

	@Column(name="UPDATE_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="updateDate")
	private Date updateDate;

	public void setSoNbr(Long obj){
		this.soNbr = obj;
	}

	public Long getSoNbr(){
		return soNbr;
	}

	public void setUserId(Long obj){
		this.userId = obj;
	}

	public Long getUserId(){
		return userId;
	}

	public void setOldAcctId(Long obj){
		this.oldAcctId = obj;
	}

	public Long getOldAcctId(){
		return oldAcctId;
	}

	public void setNewAcctId(Long obj){
		this.newAcctId = obj;
	}

	public Long getNewAcctId(){
		return newAcctId;
	}

	public void setChangeDate(Date obj){
		this.changeDate = obj;
	}

	public Date getChangeDate(){
		return changeDate;
	}

	public void setSts(Integer obj){
		this.sts = obj;
	}

	public Integer getSts(){
		return sts;
	}

	public void setInDate(Date obj){
		this.inDate = obj;
	}

	public Date getInDate(){
		return inDate;
	}

	public void setUpdateDate(Date obj){
		this.updateDate = obj;
	}

	public Date getUpdateDate(){
		return updateDate;
	}

	public IAcctchgDtrade(){
	}

	public IAcctchgDtrade(Long soNbr){
		this.soNbr = soNbr;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		IAcctchgDtrade rhs=(IAcctchgDtrade)rhs0;
		if(!ObjectUtils.equals(soNbr, rhs.soNbr)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(soNbr)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{soNbr,userId,oldAcctId,newAcctId,changeDate,sts,inDate,updateDate}
}
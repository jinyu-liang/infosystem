package com.ailk.openbilling.persistence.itable.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 */
@NotModified
@Entity
@Table(schema="JD",name="I_CREDIT")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"userId","acctId","creditType","creditItemId","creditFlag","credit","validDate","expireDate","operType","creditLevel","soNbr","commitDate"})
public class ICredit extends DataObject{


	@Column(name="USER_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="userId")
	private Long userId;

	@Column(name="ACCT_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="acctId")
	private Long acctId;

	@Column(name="CREDIT_TYPE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="creditType")
	private Integer creditType;

	@Column(name="CREDIT_ITEM_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="creditItemId")
	private Long creditItemId;

	@Column(name="CREDIT_FLAG",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="creditFlag")
	private Integer creditFlag;

	@Column(name="CREDIT",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="credit")
	private Long credit;

	@Column(name="VALID_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="validDate")
	private Date validDate;

	@Column(name="EXPIRE_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="expireDate")
	private Date expireDate;

	@Column(name="OPER_TYPE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="operType")
	private Integer operType;

	@Column(name="CREDIT_LEVEL",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="creditLevel")
	private Integer creditLevel;

	@Column(name="SO_NBR",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="soNbr")
	private Long soNbr;

	@Column(name="COMMIT_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="commitDate")
	private Date commitDate;

	public void setUserId(Long obj){
		this.userId = obj;
	}

	public Long getUserId(){
		return userId;
	}

	public void setAcctId(Long obj){
		this.acctId = obj;
	}

	public Long getAcctId(){
		return acctId;
	}

	public void setCreditType(Integer obj){
		this.creditType = obj;
	}

	public Integer getCreditType(){
		return creditType;
	}

	public void setCreditItemId(Long obj){
		this.creditItemId = obj;
	}

	public Long getCreditItemId(){
		return creditItemId;
	}

	public void setCreditFlag(Integer obj){
		this.creditFlag = obj;
	}

	public Integer getCreditFlag(){
		return creditFlag;
	}

	public void setCredit(Long obj){
		this.credit = obj;
	}

	public Long getCredit(){
		return credit;
	}

	public void setValidDate(Date obj){
		this.validDate = obj;
	}

	public Date getValidDate(){
		return validDate;
	}

	public void setExpireDate(Date obj){
		this.expireDate = obj;
	}

	public Date getExpireDate(){
		return expireDate;
	}

	public void setOperType(Integer obj){
		this.operType = obj;
	}

	public Integer getOperType(){
		return operType;
	}

	public void setCreditLevel(Integer obj){
		this.creditLevel = obj;
	}

	public Integer getCreditLevel(){
		return creditLevel;
	}

	public void setSoNbr(Long obj){
		this.soNbr = obj;
	}

	public Long getSoNbr(){
		return soNbr;
	}

	public void setCommitDate(Date obj){
		this.commitDate = obj;
	}

	public Date getCommitDate(){
		return commitDate;
	}

	public ICredit(){
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		ICredit rhs=(ICredit)rhs0;
		if(!ObjectUtils.equals(userId, rhs.userId)) return false;
		if(!ObjectUtils.equals(acctId, rhs.acctId)) return false;
		if(!ObjectUtils.equals(creditType, rhs.creditType)) return false;
		if(!ObjectUtils.equals(creditItemId, rhs.creditItemId)) return false;
		if(!ObjectUtils.equals(creditFlag, rhs.creditFlag)) return false;
		if(!ObjectUtils.equals(credit, rhs.credit)) return false;
		if(!ObjectUtils.equals(validDate, rhs.validDate)) return false;
		if(!ObjectUtils.equals(expireDate, rhs.expireDate)) return false;
		if(!ObjectUtils.equals(operType, rhs.operType)) return false;
		if(!ObjectUtils.equals(creditLevel, rhs.creditLevel)) return false;
		if(!ObjectUtils.equals(soNbr, rhs.soNbr)) return false;
		if(!ObjectUtils.equals(commitDate, rhs.commitDate)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(userId)
		.append(acctId)
		.append(creditType)
		.append(creditItemId)
		.append(creditFlag)
		.append(credit)
		.append(validDate)
		.append(expireDate)
		.append(operType)
		.append(creditLevel)
		.append(soNbr)
		.append(commitDate)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{userId,acctId,creditType,creditItemId,creditFlag,credit,validDate,expireDate,operType,creditLevel,soNbr,commitDate}
}
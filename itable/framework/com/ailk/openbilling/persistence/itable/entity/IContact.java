package com.ailk.openbilling.persistence.itable.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="JD",name="I_CONTACT")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"custId","acctId","userId","contactType","contactName","mobilePhone","homePhone","countryId","provCode","regionCode","officePhone","fax","email","postCode","address","operType","soNbr","commitDate","validDate","expireDate"})
public class IContact extends DataObject{


	@Column(name="CUST_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="custId")
	private Long custId;

	@Column(name="ACCT_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="acctId")
	private Long acctId;

	@Column(name="USER_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="userId")
	private Long userId;

	@Column(name="CONTACT_TYPE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="contactType")
	private Integer contactType;

	@Column(name="CONTACT_NAME",columnDefinition="Varchar",length=255)
	@XmlElement(name="contactName")
	private String contactName;

	@Column(name="MOBILE_PHONE",columnDefinition="Varchar",length=32)
	@XmlElement(name="mobilePhone")
	private String mobilePhone;

	@Column(name="HOME_PHONE",columnDefinition="Varchar",length=20)
	@XmlElement(name="homePhone")
	private String homePhone;

	@Column(name="COUNTRY_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="countryId")
	private Integer countryId;

	@Column(name="PROV_CODE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="provCode")
	private Integer provCode;

	@Column(name="REGION_CODE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="regionCode")
	private Integer regionCode;

	@Column(name="OFFICE_PHONE",columnDefinition="Varchar",length=20)
	@XmlElement(name="officePhone")
	private String officePhone;

	@Column(name="FAX",columnDefinition="Varchar",length=64)
	@XmlElement(name="fax")
	private String fax;

	@Column(name="EMAIL",columnDefinition="Varchar",length=255)
	@XmlElement(name="email")
	private String email;

	@Column(name="POST_CODE",columnDefinition="Varchar",length=512)
	@XmlElement(name="postCode")
	private String postCode;

	@Column(name="ADDRESS",columnDefinition="Varchar",length=512)
	@XmlElement(name="address")
	private String address;

	@Column(name="OPER_TYPE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="operType")
	private Integer operType;

	@Column(name="SO_NBR",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="soNbr")
	private Long soNbr;

	@Column(name="COMMIT_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="commitDate")
	private Date commitDate;

	@Column(name="VALID_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="validDate")
	private Date validDate;

	@Column(name="EXPIRE_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="expireDate")
	private Date expireDate;

	public void setCustId(Long obj){
		this.custId = obj;
	}

	public Long getCustId(){
		return custId;
	}

	public void setAcctId(Long obj){
		this.acctId = obj;
	}

	public Long getAcctId(){
		return acctId;
	}

	public void setUserId(Long obj){
		this.userId = obj;
	}

	public Long getUserId(){
		return userId;
	}

	public void setContactType(Integer obj){
		this.contactType = obj;
	}

	public Integer getContactType(){
		return contactType;
	}

	public void setContactName(String obj){
		this.contactName = obj;
	}

	public String getContactName(){
		return contactName;
	}

	public void setMobilePhone(String obj){
		this.mobilePhone = obj;
	}

	public String getMobilePhone(){
		return mobilePhone;
	}

	public void setHomePhone(String obj){
		this.homePhone = obj;
	}

	public String getHomePhone(){
		return homePhone;
	}

	public void setCountryId(Integer obj){
		this.countryId = obj;
	}

	public Integer getCountryId(){
		return countryId;
	}

	public void setProvCode(Integer obj){
		this.provCode = obj;
	}

	public Integer getProvCode(){
		return provCode;
	}

	public void setRegionCode(Integer obj){
		this.regionCode = obj;
	}

	public Integer getRegionCode(){
		return regionCode;
	}

	public void setOfficePhone(String obj){
		this.officePhone = obj;
	}

	public String getOfficePhone(){
		return officePhone;
	}

	public void setFax(String obj){
		this.fax = obj;
	}

	public String getFax(){
		return fax;
	}

	public void setEmail(String obj){
		this.email = obj;
	}

	public String getEmail(){
		return email;
	}

	public void setPostCode(String obj){
		this.postCode = obj;
	}

	public String getPostCode(){
		return postCode;
	}

	public void setAddress(String obj){
		this.address = obj;
	}

	public String getAddress(){
		return address;
	}

	public void setOperType(Integer obj){
		this.operType = obj;
	}

	public Integer getOperType(){
		return operType;
	}

	public void setSoNbr(Long obj){
		this.soNbr = obj;
	}

	public Long getSoNbr(){
		return soNbr;
	}

	public void setCommitDate(Date obj){
		this.commitDate = obj;
	}

	public Date getCommitDate(){
		return commitDate;
	}

	public void setValidDate(Date obj){
		this.validDate = obj;
	}

	public Date getValidDate(){
		return validDate;
	}

	public void setExpireDate(Date obj){
		this.expireDate = obj;
	}

	public Date getExpireDate(){
		return expireDate;
	}

	public IContact(){
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		IContact rhs=(IContact)rhs0;
		if(!ObjectUtils.equals(custId, rhs.custId)) return false;
		if(!ObjectUtils.equals(acctId, rhs.acctId)) return false;
		if(!ObjectUtils.equals(userId, rhs.userId)) return false;
		if(!ObjectUtils.equals(contactType, rhs.contactType)) return false;
		if(!ObjectUtils.equals(contactName, rhs.contactName)) return false;
		if(!ObjectUtils.equals(mobilePhone, rhs.mobilePhone)) return false;
		if(!ObjectUtils.equals(homePhone, rhs.homePhone)) return false;
		if(!ObjectUtils.equals(countryId, rhs.countryId)) return false;
		if(!ObjectUtils.equals(provCode, rhs.provCode)) return false;
		if(!ObjectUtils.equals(regionCode, rhs.regionCode)) return false;
		if(!ObjectUtils.equals(officePhone, rhs.officePhone)) return false;
		if(!ObjectUtils.equals(fax, rhs.fax)) return false;
		if(!ObjectUtils.equals(email, rhs.email)) return false;
		if(!ObjectUtils.equals(postCode, rhs.postCode)) return false;
		if(!ObjectUtils.equals(address, rhs.address)) return false;
		if(!ObjectUtils.equals(operType, rhs.operType)) return false;
		if(!ObjectUtils.equals(soNbr, rhs.soNbr)) return false;
		if(!ObjectUtils.equals(commitDate, rhs.commitDate)) return false;
		if(!ObjectUtils.equals(validDate, rhs.validDate)) return false;
		if(!ObjectUtils.equals(expireDate, rhs.expireDate)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(custId)
		.append(acctId)
		.append(userId)
		.append(contactType)
		.append(contactName)
		.append(mobilePhone)
		.append(homePhone)
		.append(countryId)
		.append(provCode)
		.append(regionCode)
		.append(officePhone)
		.append(fax)
		.append(email)
		.append(postCode)
		.append(address)
		.append(operType)
		.append(soNbr)
		.append(commitDate)
		.append(validDate)
		.append(expireDate)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{custId,acctId,userId,contactType,contactName,mobilePhone,homePhone,countryId,provCode,regionCode,officePhone,fax,email,postCode,address,operType,soNbr,commitDate,validDate,expireDate}
}
package com.ailk.openbilling.persistence.itable.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="jd",name="I_USER_SVC_INT")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"userId","userIdA","packageId","serviceId","mainTag","startDate","endDate","updateTime","validDate","expireDate","operType","soNbr","commitDate"})
public class IUserSvcInt extends DataObject{


	@Column(name="USER_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="userId")
	private long userId;

	@Column(name="USER_ID_A",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="userIdA")
	private long userIdA;

	@Column(name="PACKAGE_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="packageId")
	private long packageId;

	@Column(name="SERVICE_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="serviceId")
	private long serviceId;

	@Column(name="MAIN_TAG",columnDefinition="Varchar",length=1)
	@XmlElement(name="mainTag")
	private String mainTag;

	@Column(name="START_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="startDate")
	private Date startDate;

	@Column(name="END_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="endDate")
	private Date endDate;

	@Column(name="UPDATE_TIME",columnDefinition="TimeStamp")
	@XmlElement(name="updateTime")
	private Date updateTime;

	@Column(name="VALID_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="validDate")
	private Date validDate;

	@Column(name="EXPIRE_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="expireDate")
	private Date expireDate;

	@Column(name="OPER_TYPE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="operType")
	private Integer operType;

	@Column(name="SO_NBR",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="soNbr")
	private Long soNbr;

	@Column(name="COMMIT_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="commitDate")
	private Date commitDate;

	public void setUserId(long obj){
		this.userId = obj;
	}

	public long getUserId(){
		return userId;
	}

	public void setUserIdA(long obj){
		this.userIdA = obj;
	}

	public long getUserIdA(){
		return userIdA;
	}

	public void setPackageId(long obj){
		this.packageId = obj;
	}

	public long getPackageId(){
		return packageId;
	}

	public void setServiceId(long obj){
		this.serviceId = obj;
	}

	public long getServiceId(){
		return serviceId;
	}

	public void setMainTag(String obj){
		this.mainTag = obj;
	}

	public String getMainTag(){
		return mainTag;
	}

	public void setStartDate(Date obj){
		this.startDate = obj;
	}

	public Date getStartDate(){
		return startDate;
	}

	public void setEndDate(Date obj){
		this.endDate = obj;
	}

	public Date getEndDate(){
		return endDate;
	}

	public void setUpdateTime(Date obj){
		this.updateTime = obj;
	}

	public Date getUpdateTime(){
		return updateTime;
	}

	public void setValidDate(Date obj){
		this.validDate = obj;
	}

	public Date getValidDate(){
		return validDate;
	}

	public void setExpireDate(Date obj){
		this.expireDate = obj;
	}

	public Date getExpireDate(){
		return expireDate;
	}

	public void setOperType(Integer obj){
		this.operType = obj;
	}

	public Integer getOperType(){
		return operType;
	}

	public void setSoNbr(Long obj){
		this.soNbr = obj;
	}

	public Long getSoNbr(){
		return soNbr;
	}

	public void setCommitDate(Date obj){
		this.commitDate = obj;
	}

	public Date getCommitDate(){
		return commitDate;
	}

	public IUserSvcInt(){
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		IUserSvcInt rhs=(IUserSvcInt)rhs0;
		if(!ObjectUtils.equals(userId, rhs.userId)) return false;
		if(!ObjectUtils.equals(userIdA, rhs.userIdA)) return false;
		if(!ObjectUtils.equals(packageId, rhs.packageId)) return false;
		if(!ObjectUtils.equals(serviceId, rhs.serviceId)) return false;
		if(!ObjectUtils.equals(mainTag, rhs.mainTag)) return false;
		if(!ObjectUtils.equals(startDate, rhs.startDate)) return false;
		if(!ObjectUtils.equals(endDate, rhs.endDate)) return false;
		if(!ObjectUtils.equals(updateTime, rhs.updateTime)) return false;
		if(!ObjectUtils.equals(validDate, rhs.validDate)) return false;
		if(!ObjectUtils.equals(expireDate, rhs.expireDate)) return false;
		if(!ObjectUtils.equals(operType, rhs.operType)) return false;
		if(!ObjectUtils.equals(soNbr, rhs.soNbr)) return false;
		if(!ObjectUtils.equals(commitDate, rhs.commitDate)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(userId)
		.append(userIdA)
		.append(packageId)
		.append(serviceId)
		.append(mainTag)
		.append(startDate)
		.append(endDate)
		.append(updateTime)
		.append(validDate)
		.append(expireDate)
		.append(operType)
		.append(soNbr)
		.append(commitDate)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{userId,userIdA,packageId,serviceId,mainTag,startDate,endDate,updateTime,validDate,expireDate,operType,soNbr,commitDate}
}
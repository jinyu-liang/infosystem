package com.ailk.openbilling.persistence.itable.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="JD",name="I_CUST_VIP")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"userId","custId","usecustId","vipState","vipClass","vipType","custManagerId","validDate","expireDate","commitDate","operType","soNbr"})
public class ICustVip extends DataObject{


	@Column(name="USER_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="userId")
	private Long userId;

	@Column(name="CUST_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="custId")
	private Long custId;

	@Column(name="USECUST_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="usecustId")
	private Long usecustId;

	@Column(name="VIP_STATE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="vipState")
	private Integer vipState;

	@Column(name="VIP_CLASS",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="vipClass")
	private Integer vipClass;

	@Column(name="VIP_TYPE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="vipType")
	private Integer vipType;

	@Column(name="CUST_MANAGER_ID",columnDefinition="Varchar",length=8)
	@XmlElement(name="custManagerId")
	private String custManagerId;

	@Column(name="VALID_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="validDate")
	private Date validDate;

	@Column(name="EXPIRE_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="expireDate")
	private Date expireDate;

	@Column(name="COMMIT_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="commitDate")
	private Date commitDate;

	@Column(name="OPER_TYPE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="operType")
	private Integer operType;

	@Column(name="SO_NBR",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="soNbr")
	private Long soNbr;

	public void setUserId(Long obj){
		this.userId = obj;
	}

	public Long getUserId(){
		return userId;
	}

	public void setCustId(Long obj){
		this.custId = obj;
	}

	public Long getCustId(){
		return custId;
	}

	public void setUsecustId(Long obj){
		this.usecustId = obj;
	}

	public Long getUsecustId(){
		return usecustId;
	}

	public void setVipState(Integer obj){
		this.vipState = obj;
	}

	public Integer getVipState(){
		return vipState;
	}

	public void setVipClass(Integer obj){
		this.vipClass = obj;
	}

	public Integer getVipClass(){
		return vipClass;
	}

	public void setVipType(Integer obj){
		this.vipType = obj;
	}

	public Integer getVipType(){
		return vipType;
	}

	public void setCustManagerId(String obj){
		this.custManagerId = obj;
	}

	public String getCustManagerId(){
		return custManagerId;
	}

	public void setValidDate(Date obj){
		this.validDate = obj;
	}

	public Date getValidDate(){
		return validDate;
	}

	public void setExpireDate(Date obj){
		this.expireDate = obj;
	}

	public Date getExpireDate(){
		return expireDate;
	}

	public void setCommitDate(Date obj){
		this.commitDate = obj;
	}

	public Date getCommitDate(){
		return commitDate;
	}

	public void setOperType(Integer obj){
		this.operType = obj;
	}

	public Integer getOperType(){
		return operType;
	}

	public void setSoNbr(Long obj){
		this.soNbr = obj;
	}

	public Long getSoNbr(){
		return soNbr;
	}

	public ICustVip(){
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		ICustVip rhs=(ICustVip)rhs0;
		if(!ObjectUtils.equals(userId, rhs.userId)) return false;
		if(!ObjectUtils.equals(custId, rhs.custId)) return false;
		if(!ObjectUtils.equals(usecustId, rhs.usecustId)) return false;
		if(!ObjectUtils.equals(vipState, rhs.vipState)) return false;
		if(!ObjectUtils.equals(vipClass, rhs.vipClass)) return false;
		if(!ObjectUtils.equals(vipType, rhs.vipType)) return false;
		if(!ObjectUtils.equals(custManagerId, rhs.custManagerId)) return false;
		if(!ObjectUtils.equals(validDate, rhs.validDate)) return false;
		if(!ObjectUtils.equals(expireDate, rhs.expireDate)) return false;
		if(!ObjectUtils.equals(commitDate, rhs.commitDate)) return false;
		if(!ObjectUtils.equals(operType, rhs.operType)) return false;
		if(!ObjectUtils.equals(soNbr, rhs.soNbr)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(userId)
		.append(custId)
		.append(usecustId)
		.append(vipState)
		.append(vipClass)
		.append(vipType)
		.append(custManagerId)
		.append(validDate)
		.append(expireDate)
		.append(commitDate)
		.append(operType)
		.append(soNbr)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{userId,custId,usecustId,vipState,vipClass,vipType,custManagerId,validDate,expireDate,commitDate,operType,soNbr}
}
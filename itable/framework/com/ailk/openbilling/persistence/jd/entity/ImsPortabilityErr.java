package com.ailk.openbilling.persistence.jd.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="JD",name="IMS_PORTABILITY_ERR")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"userId","inRegion","outRegion","validDate","regionCode","errorMsg","dealDate"})
public class ImsPortabilityErr extends DataObject{


	@Column(name="USER_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="userId")
	private Long userId;

	@Column(name="IN_REGION",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="inRegion")
	private Integer inRegion;

	@Column(name="OUT_REGION",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="outRegion")
	private Integer outRegion;

	@Column(name="VALID_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="validDate")
	private Date validDate;

	@Column(name="REGION_CODE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="regionCode")
	private Integer regionCode;

	@Column(name="ERROR_MSG",columnDefinition="Varchar",length=256,nullable=false)
	@XmlElement(name="errorMsg")
	private String errorMsg;

	@Column(name="DEAL_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="dealDate")
	private Date dealDate;

	public void setUserId(Long obj){
		this.userId = obj;
	}

	public Long getUserId(){
		return userId;
	}

	public void setInRegion(Integer obj){
		this.inRegion = obj;
	}

	public Integer getInRegion(){
		return inRegion;
	}

	public void setOutRegion(Integer obj){
		this.outRegion = obj;
	}

	public Integer getOutRegion(){
		return outRegion;
	}

	public void setValidDate(Date obj){
		this.validDate = obj;
	}

	public Date getValidDate(){
		return validDate;
	}

	public void setRegionCode(Integer obj){
		this.regionCode = obj;
	}

	public Integer getRegionCode(){
		return regionCode;
	}

	public void setErrorMsg(String obj){
		this.errorMsg = obj;
	}

	public String getErrorMsg(){
		return errorMsg;
	}

	public void setDealDate(Date obj){
		this.dealDate = obj;
	}

	public Date getDealDate(){
		return dealDate;
	}

	public ImsPortabilityErr(){
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		ImsPortabilityErr rhs=(ImsPortabilityErr)rhs0;
		if(!ObjectUtils.equals(userId, rhs.userId)) return false;
		if(!ObjectUtils.equals(inRegion, rhs.inRegion)) return false;
		if(!ObjectUtils.equals(outRegion, rhs.outRegion)) return false;
		if(!ObjectUtils.equals(validDate, rhs.validDate)) return false;
		if(!ObjectUtils.equals(regionCode, rhs.regionCode)) return false;
		if(!ObjectUtils.equals(errorMsg, rhs.errorMsg)) return false;
		if(!ObjectUtils.equals(dealDate, rhs.dealDate)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(userId)
		.append(inRegion)
		.append(outRegion)
		.append(validDate)
		.append(regionCode)
		.append(errorMsg)
		.append(dealDate)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{userId,inRegion,outRegion,validDate,regionCode,errorMsg,dealDate}
}
package com.ailk.openbilling.persistence.sys.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.GenerationType;
import javax.persistence.GeneratedValue;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="sd",name="SYS_POLICY_ELEMENTS")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"elementId","elementName","elementType","elementKey","srcId"})
public class SysPolicyElements extends DataObject{


	/**
	 * Policy element identifier, a unique identifier
	 */
	@GeneratedValue(strategy=GenerationType.SEQUENCE)
	@Id
	@Column(name="ELEMENT_ID",precision=10,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="elementId")
	private Integer elementId;

	/**
	 * Policy element name, a short description of the element
	 */
	@Column(name="ELEMENT_NAME",columnDefinition="Varchar",length=64,nullable=false)
	@XmlElement(name="elementName")
	private String elementName;

	/**
	 * Element types: available elements at present such as XDR,MDB,DB
0:XDR
1:MDB
2:DB
3:PARAM
	 */
	@Column(name="ELEMENT_TYPE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="elementType")
	private Integer elementType;

	/**
	 * Real content of policy element, for instance, if ELEMENT_TYPE is configured XDR, then the field content is the value of an XDR element; If it's configured MDB or DB, then the field content is generally like table name or field name mapping to some certain field in MDB or DB.
	 */
	@Column(name="ELEMENT_KEY",columnDefinition="Varchar",length=1024,nullable=false)
	@XmlElement(name="elementKey")
	private String elementKey;

	/**
	 * Policy element source definition, reserved
0 means no special source
	 */
	@Column(name="SRC_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="srcId")
	private Integer srcId;

	public void setElementId(Integer obj){
		this.elementId = obj;
	}

	public Integer getElementId(){
		return elementId;
	}

	public void setElementName(String obj){
		this.elementName = obj;
	}

	public String getElementName(){
		return elementName;
	}

	public void setElementType(Integer obj){
		this.elementType = obj;
	}

	public Integer getElementType(){
		return elementType;
	}

	public void setElementKey(String obj){
		this.elementKey = obj;
	}

	public String getElementKey(){
		return elementKey;
	}

	public void setSrcId(Integer obj){
		this.srcId = obj;
	}

	public Integer getSrcId(){
		return srcId;
	}

	public SysPolicyElements(){
	}

	public SysPolicyElements(Integer elementId){
		this.elementId = elementId;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		SysPolicyElements rhs=(SysPolicyElements)rhs0;
		if(!ObjectUtils.equals(elementId, rhs.elementId)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(elementId)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{elementId,elementName,elementType,elementKey,srcId}
}
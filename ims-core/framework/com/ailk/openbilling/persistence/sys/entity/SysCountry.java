package com.ailk.openbilling.persistence.sys.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.GenerationType;
import javax.persistence.GeneratedValue;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="sd",name="SYS_COUNTRY")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"countryId","name","nameAbbreviation","countryCode","geographicAreaId","type","languageId","timeZoneId","timeZone"})
public class SysCountry extends DataObject{


	/**
	 * Country ID
	 */
	@GeneratedValue(strategy=GenerationType.SEQUENCE)
	@Id
	@Column(name="COUNTRY_ID",precision=10,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="countryId")
	private Integer countryId;

	/**
	 * Country name
	 */
	@Column(name="NAME",columnDefinition="Varchar",length=256,nullable=false)
	@XmlElement(name="name")
	private String name;

	/**
	 * Abbreviation of country name
	 */
	@Column(name="NAME_ABBREVIATION",columnDefinition="Varchar",length=256)
	@XmlElement(name="nameAbbreviation")
	private String nameAbbreviation;

	/**
	 * ISO2 country code
	 */
	@Column(name="COUNTRY_CODE",columnDefinition="Varchar",length=9,nullable=false)
	@XmlElement(name="countryCode")
	private String countryCode;

	/**
	 * Geographic Location ( standby)
	 */
	@Column(name="GEOGRAPHIC_AREA_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="geographicAreaId")
	private Integer geographicAreaId;

	/**
	 * Country type:
1:developed country
2:developing country
	 */
	@Column(name="TYPE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="type")
	private Integer type;

	/**
	 * Language ID
	 */
	@Column(name="LANGUAGE_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="languageId")
	private Integer languageId;

	/**
	 * ????????
	 */
	@Column(name="TIME_ZONE_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="timeZoneId")
	private Integer timeZoneId;

	@Column(name="TIME_ZONE",columnDefinition="Varchar",length=5)
	@XmlElement(name="timeZone")
	private String timeZone;

	public void setCountryId(Integer obj){
		this.countryId = obj;
	}

	public Integer getCountryId(){
		return countryId;
	}

	public void setName(String obj){
		this.name = obj;
	}

	public String getName(){
		return name;
	}

	public void setNameAbbreviation(String obj){
		this.nameAbbreviation = obj;
	}

	public String getNameAbbreviation(){
		return nameAbbreviation;
	}

	public void setCountryCode(String obj){
		this.countryCode = obj;
	}

	public String getCountryCode(){
		return countryCode;
	}

	public void setGeographicAreaId(Integer obj){
		this.geographicAreaId = obj;
	}

	public Integer getGeographicAreaId(){
		return geographicAreaId;
	}

	public void setType(Integer obj){
		this.type = obj;
	}

	public Integer getType(){
		return type;
	}

	public void setLanguageId(Integer obj){
		this.languageId = obj;
	}

	public Integer getLanguageId(){
		return languageId;
	}

	public void setTimeZoneId(Integer obj){
		this.timeZoneId = obj;
	}

	public Integer getTimeZoneId(){
		return timeZoneId;
	}

	public void setTimeZone(String obj){
		this.timeZone = obj;
	}

	public String getTimeZone(){
		return timeZone;
	}

	public SysCountry(){
	}

	public SysCountry(Integer countryId){
		this.countryId = countryId;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		SysCountry rhs=(SysCountry)rhs0;
		if(!ObjectUtils.equals(countryId, rhs.countryId)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(countryId)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{countryId,name,nameAbbreviation,countryCode,geographicAreaId,type,languageId,timeZoneId,timeZone}
}
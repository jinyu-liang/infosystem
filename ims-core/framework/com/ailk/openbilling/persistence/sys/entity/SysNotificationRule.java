package com.ailk.openbilling.persistence.sys.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.GenerationType;
import javax.persistence.GeneratedValue;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 */
@NotModified
@Entity
@Table(schema="sd",name="SYS_NOTIFICATION_RULE")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"notificationId","notificationName","notificationDesc","notificationType"})
public class SysNotificationRule extends DataObject{


	/**
	 * Alarm Type Identifier
	 */
	@GeneratedValue(strategy=GenerationType.SEQUENCE)
	@Id
	@Column(name="NOTIFICATION_ID",precision=9,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="notificationId")
	private int notificationId;

	/**
	 * Alarm Type Name
	 */
	@Column(name="NOTIFICATION_NAME",columnDefinition="Varchar",length=256,nullable=false)
	@XmlElement(name="notificationName")
	private String notificationName;

	/**
	 * Alarm Type Description
	 */
	@Column(name="NOTIFICATION_DESC",columnDefinition="Varchar",length=512,nullable=false)
	@XmlElement(name="notificationDesc")
	private String notificationDesc;

	/**
	 * +1 = 免费资源提醒规格 +3 = 代付提醒规格 +4 = 预算提醒规格 ----+5 = 小余额提醒规格 +6 = 信用度提醒规格 +7 = 激活提醒规格 ----+8 = 零余额提醒规格 ----+9 = 余额提醒规格 +10 = 黑白名单提醒规格 +11 = Zone提醒规格 +12 = 余额不足提醒规格 +13 = 累计赠送提醒规格 +14 = 充值提醒规格 +15 = 资费变更提醒规格 +16 = 产品生效提醒规格 +17 = 产品失效提醒规格 +18 = 累计优惠提醒规格 +19 = SLA 切换提醒规格
	 */
	@Column(name="NOTIFICATION_TYPE",precision=4,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="notificationType")
	private int notificationType;

	public void setNotificationId(int obj){
		this.notificationId = obj;
	}

	public int getNotificationId(){
		return notificationId;
	}

	public void setNotificationName(String obj){
		this.notificationName = obj;
	}

	public String getNotificationName(){
		return notificationName;
	}

	public void setNotificationDesc(String obj){
		this.notificationDesc = obj;
	}

	public String getNotificationDesc(){
		return notificationDesc;
	}

	public void setNotificationType(int obj){
		this.notificationType = obj;
	}

	public int getNotificationType(){
		return notificationType;
	}

	public SysNotificationRule(){
	}

	public SysNotificationRule(int notificationId){
		this.notificationId = notificationId;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		SysNotificationRule rhs=(SysNotificationRule)rhs0;
		if(!ObjectUtils.equals(notificationId, rhs.notificationId)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(notificationId)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{notificationId,notificationName,notificationDesc,notificationType}
}
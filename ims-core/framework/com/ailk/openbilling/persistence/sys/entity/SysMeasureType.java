package com.ailk.openbilling.persistence.sys.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.GenerationType;
import javax.persistence.GeneratedValue;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="sd",name="SYS_MEASURE_TYPE")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"measureTypeId","measureExchangeId","measureClass","name","description","localCurrency"})
public class SysMeasureType extends DataObject{


	/**
	 * Measurement types, enum values:
1 time-based
2 volume-based
3 transaction
4 piece
5 point
6 bonus
101 SDR
102 USD
103 EURO
104 CNY
111  THB
112 VND
	 */
	@GeneratedValue(strategy=GenerationType.SEQUENCE)
	@Id
	@Column(name="MEASURE_TYPE_ID",precision=10,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="measureTypeId")
	private Integer measureTypeId;

	/**
	 * Exchange rules among measurements of the same type
	 */
	@Column(name="MEASURE_EXCHANGE_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="measureExchangeId")
	private Integer measureExchangeId;

	/**
	 * Measurement classification:
0: Charge measurement
1: Resurce measurement
2: Rate measurement
	 */
	@Column(name="MEASURE_CLASS",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="measureClass")
	private Integer measureClass;

	/**
	 * Measurement name, mapping with measurement identifier:
1  Duration
2  Data volume
3  Transaction
4  Piece
5  Point
6  Bonus
101  SDR
102  USD
103  EURO
104  CNY
111  THB
112  VND
	 */
	@Column(name="NAME",columnDefinition="Varchar",length=256,nullable=false)
	@XmlElement(name="name")
	private String name;

	/**
	 * Measurement description
	 */
	@Column(name="DESCRIPTION",columnDefinition="Varchar",length=1024)
	@XmlElement(name="description")
	private String description;

	/**
	 * 0：表示不是本国货币
1：表示本国货币
-999：表示不用该字段
	 */
	@Column(name="LOCAL_CURRENCY",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="localCurrency")
	private Integer localCurrency;

	public void setMeasureTypeId(Integer obj){
		this.measureTypeId = obj;
	}

	public Integer getMeasureTypeId(){
		return measureTypeId;
	}

	public void setMeasureExchangeId(Integer obj){
		this.measureExchangeId = obj;
	}

	public Integer getMeasureExchangeId(){
		return measureExchangeId;
	}

	public void setMeasureClass(Integer obj){
		this.measureClass = obj;
	}

	public Integer getMeasureClass(){
		return measureClass;
	}

	public void setName(String obj){
		this.name = obj;
	}

	public String getName(){
		return name;
	}

	public void setDescription(String obj){
		this.description = obj;
	}

	public String getDescription(){
		return description;
	}

	public void setLocalCurrency(Integer obj){
		this.localCurrency = obj;
	}

	public Integer getLocalCurrency(){
		return localCurrency;
	}

	public SysMeasureType(){
	}

	public SysMeasureType(Integer measureTypeId){
		this.measureTypeId = measureTypeId;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		SysMeasureType rhs=(SysMeasureType)rhs0;
		if(!ObjectUtils.equals(measureTypeId, rhs.measureTypeId)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(measureTypeId)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{measureTypeId,measureExchangeId,measureClass,name,description,localCurrency}
}
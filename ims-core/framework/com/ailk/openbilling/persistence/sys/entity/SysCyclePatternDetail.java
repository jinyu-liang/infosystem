package com.ailk.openbilling.persistence.sys.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 */
@NotModified
@Entity
@Table(schema="SD",name="SYS_CYCLE_PATTERN_DETAIL")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"patternId","sts","validDays","creditValue"})
public class SysCyclePatternDetail extends DataObject{


	/**
	 * Pattern ID
	 */
	@Id
	@Column(name="PATTERN_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="patternId")
	private Integer patternId;

	/**
	 * State numbering
	 */
	@Id
	@Column(name="STS",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="sts")
	private Integer sts;

	/**
	 * When value=0, it is not necessary to modify previous date. For example,If one customer gets a disount on his/her birthday which will not invlove in recurring table's date.
	 */
	@Column(name="VALID_DAYS",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="validDays")
	private Integer validDays;

	/**
	 * Credit limit
	 */
	@Column(name="CREDIT_VALUE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="creditValue")
	private Long creditValue;

	public void setPatternId(Integer obj){
		this.patternId = obj;
	}

	public Integer getPatternId(){
		return patternId;
	}

	public void setSts(Integer obj){
		this.sts = obj;
	}

	public Integer getSts(){
		return sts;
	}

	public void setValidDays(Integer obj){
		this.validDays = obj;
	}

	public Integer getValidDays(){
		return validDays;
	}

	public void setCreditValue(Long obj){
		this.creditValue = obj;
	}

	public Long getCreditValue(){
		return creditValue;
	}

	public SysCyclePatternDetail(){
	}

	public SysCyclePatternDetail(Integer patternId,Integer sts){
		this.patternId = patternId;
		this.sts = sts;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		SysCyclePatternDetail rhs=(SysCyclePatternDetail)rhs0;
		if(!ObjectUtils.equals(patternId, rhs.patternId)) return false;
		if(!ObjectUtils.equals(sts, rhs.sts)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(patternId)
		.append(sts)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{patternId,sts,validDays,creditValue}
}
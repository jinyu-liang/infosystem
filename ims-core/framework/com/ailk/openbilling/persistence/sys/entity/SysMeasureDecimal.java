package com.ailk.openbilling.persistence.sys.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="sd",name="SYS_MEASURE_DECIMAL")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"measureTypeId","scaleType","decimalNumber","validDate","expireDate","description"})
public class SysMeasureDecimal extends DataObject{


	/**
	 * Measurement types, enum values:
101 SDR
102 USD
103 EURO
104 CNY
111  THB
112 VND
	 */
	@Id
	@Column(name="MEASURE_TYPE_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="measureTypeId")
	private Integer measureTypeId;

	/**
	 * 进制类型
1：TAP文件生成时进制定义
	 */
	@Id
	@Column(name="SCALE_TYPE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="scaleType")
	private Integer scaleType;

	/**
	 * 进制位
	 */
	@Column(name="DECIMAL_NUMBER",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="decimalNumber")
	private Integer decimalNumber;

	/**
	 * 生效日期
	 */
	@Id
	@Column(name="VALID_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="validDate")
	private Date validDate;

	/**
	 * 失效日期
	 */
	@Column(name="EXPIRE_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="expireDate")
	private Date expireDate;

	/**
	 * description
	 */
	@Column(name="DESCRIPTION",columnDefinition="Varchar",length=1024)
	@XmlElement(name="description")
	private String description;

	public void setMeasureTypeId(Integer obj){
		this.measureTypeId = obj;
	}

	public Integer getMeasureTypeId(){
		return measureTypeId;
	}

	public void setScaleType(Integer obj){
		this.scaleType = obj;
	}

	public Integer getScaleType(){
		return scaleType;
	}

	public void setDecimalNumber(Integer obj){
		this.decimalNumber = obj;
	}

	public Integer getDecimalNumber(){
		return decimalNumber;
	}

	public void setValidDate(Date obj){
		this.validDate = obj;
	}

	public Date getValidDate(){
		return validDate;
	}

	public void setExpireDate(Date obj){
		this.expireDate = obj;
	}

	public Date getExpireDate(){
		return expireDate;
	}

	public void setDescription(String obj){
		this.description = obj;
	}

	public String getDescription(){
		return description;
	}

	public SysMeasureDecimal(){
	}

	public SysMeasureDecimal(Integer measureTypeId,Integer scaleType,Date validDate){
		this.measureTypeId = measureTypeId;
		this.scaleType = scaleType;
		this.validDate = validDate;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		SysMeasureDecimal rhs=(SysMeasureDecimal)rhs0;
		if(!ObjectUtils.equals(measureTypeId, rhs.measureTypeId)) return false;
		if(!ObjectUtils.equals(scaleType, rhs.scaleType)) return false;
		if(!ObjectUtils.equals(validDate, rhs.validDate)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(measureTypeId)
		.append(scaleType)
		.append(validDate)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{measureTypeId,scaleType,decimalNumber,validDate,expireDate,description}
}
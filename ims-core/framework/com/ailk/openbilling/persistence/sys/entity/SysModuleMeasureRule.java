package com.ailk.openbilling.persistence.sys.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="sd",name="SYS_MODULE_MEASURE_RULE")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"moduleId","measureTypeId","measureId","precisionRound","description"})
public class SysModuleMeasureRule extends DataObject{


	/**
	 * ??????
1:????
2:????
	 */
	@Id
	@Column(name="MODULE_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="moduleId")
	private Integer moduleId;

	/**
	 * Measure type
The following are recommended enumeration
1:duration
2:volume
3:number of times
4:piece
5:count
6:bonus
101:SDR
102:USD
103:EURO
104:CNY
111:THB
112:VND
	 */
	@Id
	@Column(name="MEASURE_TYPE_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="measureTypeId")
	private Integer measureTypeId;

	/**
	 * ?????????????

Measure ID: A unique identifier
For example:

101	millisecond
102	Sec
103	byte
104	KB
105	MB
109	Piece
202	Sec
301	times
501	Point
601	Points
701	Days
801	MB/Sec
1901	times
10101      SDR
10201	Cent
10202	Dollar
10301	Cent
10302	Euro
10401	Hao
10402	Li
10403	Fen
10404	Yuan
11100	Satang/10
11101	Satang
11102	Baht
20101	Kpbs
20102	Mpbs
	 */
	@Column(name="MEASURE_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="measureId")
	private Integer measureId;

	/**
	 * ?????????????,?????????????,????????
1:rounding up
2:rounding down
3:rounding to nearest
	 */
	@Column(name="PRECISION_ROUND",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="precisionRound")
	private Integer precisionRound;

	/**
	 * description
	 */
	@Column(name="DESCRIPTION",columnDefinition="Varchar",length=1024)
	@XmlElement(name="description")
	private String description;

	public void setModuleId(Integer obj){
		this.moduleId = obj;
	}

	public Integer getModuleId(){
		return moduleId;
	}

	public void setMeasureTypeId(Integer obj){
		this.measureTypeId = obj;
	}

	public Integer getMeasureTypeId(){
		return measureTypeId;
	}

	public void setMeasureId(Integer obj){
		this.measureId = obj;
	}

	public Integer getMeasureId(){
		return measureId;
	}

	public void setPrecisionRound(Integer obj){
		this.precisionRound = obj;
	}

	public Integer getPrecisionRound(){
		return precisionRound;
	}

	public void setDescription(String obj){
		this.description = obj;
	}

	public String getDescription(){
		return description;
	}

	public SysModuleMeasureRule(){
	}

	public SysModuleMeasureRule(Integer moduleId,Integer measureTypeId){
		this.moduleId = moduleId;
		this.measureTypeId = measureTypeId;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		SysModuleMeasureRule rhs=(SysModuleMeasureRule)rhs0;
		if(!ObjectUtils.equals(measureTypeId, rhs.measureTypeId)) return false;
		if(!ObjectUtils.equals(moduleId, rhs.moduleId)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(measureTypeId)
		.append(moduleId)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{moduleId,measureTypeId,measureId,precisionRound,description}
}
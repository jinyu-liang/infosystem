package com.ailk.openbilling.persistence.cust.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.GenerationType;
import javax.persistence.GeneratedValue;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 */
@NotModified
@Entity
@Table(schema="cd",name="IMS_EVENT_RECORD")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"eventId","triggerDate","eventClass","createDate","id","dealCount","dealDate","errorMsg","errorCode","sts"})
public class ImsEventRecord extends DataObject{


	@GeneratedValue(strategy=GenerationType.SEQUENCE)
	@Id
	@Column(name="EVENT_ID",precision=10,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="eventId")
	private Long eventId;

	@Column(name="TRIGGER_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="triggerDate")
	private Date triggerDate;

	@Column(name="EVENT_CLASS",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="eventClass")
	private Integer eventClass;

	@Column(name="CREATE_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="createDate")
	private Date createDate;

	/**
	 * ???
	 */
	@Column(name="ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="id")
	private Long id;

	/**
	 * ????
	 */
	@Column(name="DEAL_COUNT",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="dealCount")
	private Integer dealCount;

	/**
	 * ????
	 */
	@Column(name="DEAL_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="dealDate")
	private Date dealDate;

	/**
	 * ????
	 */
	@Column(name="ERROR_MSG",columnDefinition="Varchar",length=256)
	@XmlElement(name="errorMsg")
	private String errorMsg;

	/**
	 * ????
	 */
	@Column(name="ERROR_CODE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="errorCode")
	private Integer errorCode;

	/**
	 * ??1:??2:????3:??
	 */
	@Column(name="STS",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="sts")
	private Integer sts;

	public void setEventId(Long obj){
		this.eventId = obj;
	}

	public Long getEventId(){
		return eventId;
	}

	public void setTriggerDate(Date obj){
		this.triggerDate = obj;
	}

	public Date getTriggerDate(){
		return triggerDate;
	}

	public void setEventClass(Integer obj){
		this.eventClass = obj;
	}

	public Integer getEventClass(){
		return eventClass;
	}

	public void setCreateDate(Date obj){
		this.createDate = obj;
	}

	public Date getCreateDate(){
		return createDate;
	}

	public void setId(Long obj){
		this.id = obj;
	}

	public Long getId(){
		return id;
	}

	public void setDealCount(Integer obj){
		this.dealCount = obj;
	}

	public Integer getDealCount(){
		return dealCount;
	}

	public void setDealDate(Date obj){
		this.dealDate = obj;
	}

	public Date getDealDate(){
		return dealDate;
	}

	public void setErrorMsg(String obj){
		this.errorMsg = obj;
	}

	public String getErrorMsg(){
		return errorMsg;
	}

	public void setErrorCode(Integer obj){
		this.errorCode = obj;
	}

	public Integer getErrorCode(){
		return errorCode;
	}

	public void setSts(Integer obj){
		this.sts = obj;
	}

	public Integer getSts(){
		return sts;
	}

	public ImsEventRecord(){
	}

	public ImsEventRecord(Long eventId){
		this.eventId = eventId;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		ImsEventRecord rhs=(ImsEventRecord)rhs0;
		if(!ObjectUtils.equals(eventId, rhs.eventId)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(eventId)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{eventId,triggerDate,eventClass,createDate,id,dealCount,dealDate,errorMsg,errorCode,sts}
}
package com.ailk.openbilling.persistence.cust.entity;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import jef.database.DataObject;

import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;


/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@Entity
@Table(schema="jd",name="I_USER_INT")
@XmlAccessorType(XmlAccessType.PROPERTY)
@XmlType(propOrder={"userId","serialNumber","productId","phoneId","brandCode","userStateCodeset","custId","custName","sex","vipClassId","vipTypeCode","updateTime","removeTag","lastStopTime"})
public class CmUserInt extends DataObject{


	@Column(name="USER_ID",scale=10,columnDefinition="NUMBER")
	private long userId;

	@Column(name="SERIAL_NUMBER",columnDefinition="Varchar",length=40)
	private String serialNumber;

	@Column(name="PRODUCT_ID",scale=10,columnDefinition="NUMBER")
	private long productId;

	@Column(name="BRAND_CODE",columnDefinition="Varchar",length=4)
	private String brandCode;

	@Column(name="USER_STATE_CODESET",columnDefinition="Varchar",length=10)
	private String userStateCodeset;

	@Column(name="CUST_ID",scale=10,columnDefinition="NUMBER")
	private long custId;

	@Column(name="CUST_NAME",columnDefinition="Varchar",length=100)
	private String custName;


	@Column(name="SEX",scale=10,columnDefinition="Varchar",length=1)
	private String sex;

	@Column(name="VIP_CLASS_ID",columnDefinition="Varchar",length=1)
	private String vipClassId;

	@Column(name="VIP_TYPE_CODE",columnDefinition="Varchar",length=1)
	private String vipTypeCode;

	@Column(name="UPDATE_TIME",columnDefinition="TimeStamp")
	private Date updateTime;
	
	@Column(name="REMOVE_TAG",columnDefinition="Varchar",length=1)
	private String removeTag;

	@Column(name="LAST_STOP_TIME",columnDefinition="TimeStamp")
	private Date lastStopTime;

	
	@Column(name="VALID_DATE",columnDefinition="TimeStamp")
	private Date validDate;

	@Column(name="EXPIRE_DATE",columnDefinition="TimeStamp")
	private Date expireDate;

	@Column(name="OPER_TYPE",scale=10,columnDefinition="NUMBER")
	private Integer operType;

	@Column(name="SO_NBR",scale=10,columnDefinition="NUMBER")
	private long soNbr;

	@Column(name="COMMIT_DATE",columnDefinition="TimeStamp")
	private Date commitDate;
	

	public void setUserId(long obj){
		this.userId = obj;
	}

	@XmlElement(name="userId")
	public long getUserId(){
		return userId;
	}
	
	public void setCustId(long obj){
		this.custId = obj;
	}
    
	@XmlElement(name="custId")
	public long getCustId(){
		return custId;
	}

	@XmlElement(name="serialNumber")
	public String getSerialNumber() {
		return serialNumber;
	}

	public void setSerialNumber(String serialNumber) {
		this.serialNumber = serialNumber;
	}

	@XmlElement(name="productId")
	public long getProductId() {
		return productId;
	}

	public void setProductId(long productId) {
		this.productId = productId;
	}

	@XmlElement(name="brandCode")
	public String getBrandCode() {
		return brandCode;
	}

	public void setBrandCode(String brandCode) {
		this.brandCode = brandCode;
	}

	@XmlElement(name="userStateCodeset")
	public String getUserStateCodeset() {
		return userStateCodeset;
	}

	public void setUserStateCodeset(String userStateCodeset) {
		this.userStateCodeset = userStateCodeset;
	}
	
	@XmlElement(name="custName")
	public String getCustName() {
		return custName;
	}

	public void setCustName(String custName) {
		this.custName = custName;
	}
	
	@XmlElement(name="sex")
	public String getSex() {
		return sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}

	@XmlElement(name="vipClassId")
	public String getVipClassId() {
		return vipClassId;
	}

	public void setVipClassId(String vipClassId) {
		this.vipClassId = vipClassId;
	}
	
	@XmlElement(name="vipTypeCode")
	public String getVipTypeCode() {
		return vipTypeCode;
	}

	public void setVipTypeCode(String vipTypeCode) {
		this.vipTypeCode = vipTypeCode;
	}
	
	@XmlElement(name="updateTime")
	public Date getUpdateTime() {
		return updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}
	
	@XmlElement(name="removeTag")
	public String getRemoveTag() {
		return removeTag;
	}

	public void setRemoveTag(String removeTag) {
		this.removeTag = removeTag;
	}
	
	@XmlElement(name="lastStopTime")
	public Date getLastStopTime() {
		return lastStopTime;
	}

	public void setLastStopTime(Date lastStopTime) {
		this.lastStopTime = lastStopTime;
	}

	
	@XmlElement(name="validDate")
	public Date getValidDate() {
		return validDate;
	}

	public void setValidDate(Date validDate) {
		this.validDate = validDate;
	}
	
	@XmlElement(name="expireDate")
	public Date getExpireDate() {
		return expireDate;
	}

	public void setExpireDate(Date expireDate) {
		this.expireDate = expireDate;
	}
	
	@XmlElement(name="operType")
	public Integer getOperType() {
		return operType;
	}

	public void setOperType(Integer operType) {
		this.operType = operType;
	}
	
	@XmlElement(name="soNbr")
	public Long getSoNbr() {
		return soNbr;
	}

	public void setSoNbr(Long soNbr) {
		this.soNbr = soNbr;
	}

	public Date getCommitDate() {
		return commitDate;
	}

	public void setCommitDate(Date commitDate) {
		this.commitDate = commitDate;
	}

	public CmUserInt(){
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null) {return false;}
		if (!(rhs0 instanceof CmUserInt)) {return false;}
		CmUserInt rhs=(CmUserInt)rhs0;
		if (!ObjectUtils.equals(userId, rhs.userId)) {return false;}
		if (!ObjectUtils.equals(custId, rhs.custId)) {return false;}
		if (!ObjectUtils.equals(serialNumber, rhs.serialNumber)) {return false;}
		if (!ObjectUtils.equals(productId, rhs.productId)) {return false;}
		if (!ObjectUtils.equals(brandCode, rhs.brandCode)) {return false;}
		if (!ObjectUtils.equals(userStateCodeset, rhs.userStateCodeset)) {return false;}
		if (!ObjectUtils.equals(custName, rhs.custName)) {return false;}
		if (!ObjectUtils.equals(sex, rhs.sex)) {return false;}
		if (!ObjectUtils.equals(vipClassId, rhs.vipClassId)) {return false;}
		if (!ObjectUtils.equals(vipTypeCode, rhs.vipTypeCode)) {return false;}
		if (!ObjectUtils.equals(updateTime, rhs.updateTime)) {return false;}
		if (!ObjectUtils.equals(removeTag, rhs.removeTag)) {return false;}
		if (!ObjectUtils.equals(lastStopTime, rhs.lastStopTime)) {return false;}
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(userId)
		.append(custId)
		.append(serialNumber)
		.append(productId)
		.append(brandCode)
		.append(userStateCodeset)
		.append(custName)
		.append(sex)
		.append(vipClassId)
		.append(vipTypeCode)
		.append(updateTime)
		.append(removeTag)
		.append(lastStopTime)
		.append(super.getHashCode())
		.toHashCode();
	}

	public enum Field implements jef.database.Field
	{
		userId, custId, serialNumber, productId, brandCode, userStateCodeset, custName, sex, vipClassId, vipTypeCode, updateTime, removeTag, lastStopTime
	}

	

	@Override
	public String toString() {
		return "IUserInt [userId=" + userId + ", serialNumber=" + serialNumber
				+ ", productId=" + productId + ", brandCode=" + brandCode
				+ ", userStateCodeset=" + userStateCodeset + ", custId="
				+ custId + ", custName=" + custName + ", sex=" + sex
				+ ", vipClassId=" + vipClassId + ", vipTypeCode=" + vipTypeCode
				+ ", updateTime=" + updateTime + ", removeTag=" + removeTag
				+ ", lastStopTime=" + lastStopTime + "]";
	}

	
}
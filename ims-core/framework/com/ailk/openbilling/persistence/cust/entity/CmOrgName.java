package com.ailk.openbilling.persistence.cust.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="CD",name="CM_ORG_NAME")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"partyId","languageId","tradingName","validDate","expireDate","soNbr","createDate","soDate"})
public class CmOrgName extends DataObject{


	/**
	 * Party Unique Identifier
	 */
	@Id
	@Column(name="PARTY_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="partyId")
	private Long partyId;

	/**
	 * Language codeï¼Œthis is the language type of the name
	 */
	@Column(name="LANGUAGE_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="languageId")
	private Integer languageId;

	/**
	 * Organization Name
	 */
	@Column(name="TRADING_NAME",columnDefinition="Varchar",length=64,nullable=false)
	@XmlElement(name="tradingName")
	private String tradingName;

	/**
	 * Valid Date
	 */
	@Id
	@Column(name="VALID_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="validDate")
	private Date validDate;

	/**
	 * Expired Date
	 */
	@Column(name="EXPIRE_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="expireDate")
	private Date expireDate;

	/**
	 * The serial number
	 */
	@Id
	@Column(name="SO_NBR",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="soNbr")
	private Long soNbr;

	@Column(name="CREATE_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="createDate")
	private Date createDate;

	@Column(name="SO_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="soDate")
	private Date soDate;

	public void setPartyId(Long obj){
		this.partyId = obj;
	}

	public Long getPartyId(){
		return partyId;
	}

	public void setLanguageId(Integer obj){
		this.languageId = obj;
	}

	public Integer getLanguageId(){
		return languageId;
	}

	public void setTradingName(String obj){
		this.tradingName = obj;
	}

	public String getTradingName(){
		return tradingName;
	}

	public void setValidDate(Date obj){
		this.validDate = obj;
	}

	public Date getValidDate(){
		return validDate;
	}

	public void setExpireDate(Date obj){
		this.expireDate = obj;
	}

	public Date getExpireDate(){
		return expireDate;
	}

	public void setSoNbr(Long obj){
		this.soNbr = obj;
	}

	public Long getSoNbr(){
		return soNbr;
	}

	public void setCreateDate(Date obj){
		this.createDate = obj;
	}

	public Date getCreateDate(){
		return createDate;
	}

	public void setSoDate(Date obj){
		this.soDate = obj;
	}

	public Date getSoDate(){
		return soDate;
	}

	public CmOrgName(){
	}

	public CmOrgName(Long partyId,Date validDate,Long soNbr){
		this.partyId = partyId;
		this.validDate = validDate;
		this.soNbr = soNbr;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		CmOrgName rhs=(CmOrgName)rhs0;
		if(!ObjectUtils.equals(partyId, rhs.partyId)) return false;
		if(!ObjectUtils.equals(validDate, rhs.validDate)) return false;
		if(!ObjectUtils.equals(soNbr, rhs.soNbr)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(partyId)
		.append(validDate)
		.append(soNbr)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{partyId,languageId,tradingName,validDate,expireDate,soNbr,createDate,soDate}
}
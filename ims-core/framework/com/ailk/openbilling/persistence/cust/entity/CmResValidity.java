package com.ailk.openbilling.persistence.cust.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 */
@NotModified
@Entity
@Table(schema="CD",name="CM_RES_VALIDITY")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"resourceId","accountId","validDate","expireDate","soNbr","createDate","soDate","recSts","beforeChangeDays","afterChangeDays","effectFlag","userValidDate","userExpireDate"})
public class CmResValidity extends DataObject{


	/**
	 * Equipment Numbering
	 */
	@Id
	@Column(name="RESOURCE_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="resourceId")
	private Long resourceId;

	/**
	 * Account Numbering
	 */
	@Column(name="ACCOUNT_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="accountId")
	private Long accountId;

	/**
	 * Effective Date
	 */
	@Id
	@Column(name="VALID_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="validDate")
	private Date validDate;

	/**
	 * Expired Date
	 */
	@Column(name="EXPIRE_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="expireDate")
	private Date expireDate;

	/**
	 * The serial order which cause the state changing
	 */
	@Id
	@Column(name="SO_NBR",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="soNbr")
	private Long soNbr;

	@Column(name="CREATE_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="createDate")
	private Date createDate;

	/**
	 * Modification time of current record
	 */
	@Column(name="SO_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="soDate")
	private Date soDate;

	@Column(name="REC_STS",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="recSts")
	private Integer recSts;

	@Column(name="BEFORE_CHANGE_DAYS",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="beforeChangeDays")
	private Long beforeChangeDays;

	@Column(name="AFTER_CHANGE_DAYS",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="afterChangeDays")
	private Long afterChangeDays;

	@Column(name="EFFECT_FLAG",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="effectFlag")
	private Integer effectFlag;

	@Column(name="USER_VALID_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="userValidDate")
	private Date userValidDate;

	@Column(name="USER_EXPIRE_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="userExpireDate")
	private Date userExpireDate;

	public void setResourceId(Long obj){
		this.resourceId = obj;
	}

	public Long getResourceId(){
		return resourceId;
	}

	public void setAccountId(Long obj){
		this.accountId = obj;
	}

	public Long getAccountId(){
		return accountId;
	}

	public void setValidDate(Date obj){
		this.validDate = obj;
	}

	public Date getValidDate(){
		return validDate;
	}

	public void setExpireDate(Date obj){
		this.expireDate = obj;
	}

	public Date getExpireDate(){
		return expireDate;
	}

	public void setSoNbr(Long obj){
		this.soNbr = obj;
	}

	public Long getSoNbr(){
		return soNbr;
	}

	public void setCreateDate(Date obj){
		this.createDate = obj;
	}

	public Date getCreateDate(){
		return createDate;
	}

	public void setSoDate(Date obj){
		this.soDate = obj;
	}

	public Date getSoDate(){
		return soDate;
	}

	public void setRecSts(Integer obj){
		this.recSts = obj;
	}

	public Integer getRecSts(){
		return recSts;
	}

	public void setBeforeChangeDays(Long obj){
		this.beforeChangeDays = obj;
	}

	public Long getBeforeChangeDays(){
		return beforeChangeDays;
	}

	public void setAfterChangeDays(Long obj){
		this.afterChangeDays = obj;
	}

	public Long getAfterChangeDays(){
		return afterChangeDays;
	}

	public void setEffectFlag(Integer obj){
		this.effectFlag = obj;
	}

	public Integer getEffectFlag(){
		return effectFlag;
	}

	public void setUserValidDate(Date obj){
		this.userValidDate = obj;
	}

	public Date getUserValidDate(){
		return userValidDate;
	}

	public void setUserExpireDate(Date obj){
		this.userExpireDate = obj;
	}

	public Date getUserExpireDate(){
		return userExpireDate;
	}

	public CmResValidity(){
	}

	public CmResValidity(Long resourceId,Date validDate,Long soNbr){
		this.resourceId = resourceId;
		this.validDate = validDate;
		this.soNbr = soNbr;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		CmResValidity rhs=(CmResValidity)rhs0;
		if(!ObjectUtils.equals(resourceId, rhs.resourceId)) return false;
		if(!ObjectUtils.equals(validDate, rhs.validDate)) return false;
		if(!ObjectUtils.equals(soNbr, rhs.soNbr)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(resourceId)
		.append(validDate)
		.append(soNbr)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{resourceId,accountId,validDate,expireDate,soNbr,createDate,soDate,recSts,beforeChangeDays,afterChangeDays,effectFlag,userValidDate,userExpireDate}
}
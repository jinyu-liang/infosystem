package com.ailk.openbilling.persistence.cust.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.GenerationType;
import javax.persistence.GeneratedValue;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="CD",name="IMS_SCAN_EVENT_TASK_STS")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"id","actionDate","finishDate","eventId","eventType","amount","soNbr"})
public class ImsScanEventTaskSts extends DataObject{


	@GeneratedValue(strategy=GenerationType.SEQUENCE)
	@Id
	@Column(name="ID",precision=10,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="id")
	private Long id;

	@Column(name="ACTION_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="actionDate")
	private Date actionDate;

	@Column(name="FINISH_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="finishDate")
	private Date finishDate;

	@Column(name="EVENT_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="eventId")
	private Long eventId;

	@Column(name="EVENT_TYPE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="eventType")
	private Integer eventType;

	@Column(name="AMOUNT",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="amount")
	private Integer amount;

	@Column(name="SO_NBR",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="soNbr")
	private Long soNbr;

	public void setId(Long obj){
		this.id = obj;
	}

	public Long getId(){
		return id;
	}

	public void setActionDate(Date obj){
		this.actionDate = obj;
	}

	public Date getActionDate(){
		return actionDate;
	}

	public void setFinishDate(Date obj){
		this.finishDate = obj;
	}

	public Date getFinishDate(){
		return finishDate;
	}

	public void setEventId(Long obj){
		this.eventId = obj;
	}

	public Long getEventId(){
		return eventId;
	}

	public void setEventType(Integer obj){
		this.eventType = obj;
	}

	public Integer getEventType(){
		return eventType;
	}

	public void setAmount(Integer obj){
		this.amount = obj;
	}

	public Integer getAmount(){
		return amount;
	}

	public void setSoNbr(Long obj){
		this.soNbr = obj;
	}

	public Long getSoNbr(){
		return soNbr;
	}

	public ImsScanEventTaskSts(){
	}

	public ImsScanEventTaskSts(Long id){
		this.id = id;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		ImsScanEventTaskSts rhs=(ImsScanEventTaskSts)rhs0;
		if(!ObjectUtils.equals(id, rhs.id)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(id)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{id,actionDate,finishDate,eventId,eventType,amount,soNbr}
}
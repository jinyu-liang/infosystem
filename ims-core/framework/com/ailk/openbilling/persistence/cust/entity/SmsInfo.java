package com.ailk.openbilling.persistence.cust.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.GenerationType;
import javax.persistence.GeneratedValue;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="cd",name="SMS_INFO")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"id","msisdn","flag","msg","sts","getDate","para1","para2","para3","sendDate","recv","msgId","pri","accId","doneCode","notifyLang","sequenceId"})
public class SmsInfo extends DataObject{


	/**
	 * United sequence number
	 */
	@GeneratedValue(strategy=GenerationType.SEQUENCE)
	@Id
	@Column(name="ID",precision=10,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="id")
	private Long id;

	/**
	 * Mobile phone number
	 */
	@Column(name="MSISDN",columnDefinition="Varchar",length=12,nullable=false)
	@XmlElement(name="msisdn")
	private String msisdn;

	/**
	 * SMS flag, such as charging SMS
	 */
	@Column(name="FLAG",columnDefinition="Varchar",length=10,nullable=false)
	@XmlElement(name="flag")
	private String flag;

	/**
	 * Message content
	 */
	@Column(name="MSG",columnDefinition="Varchar",length=512)
	@XmlElement(name="msg")
	private String msg;

	/**
	 * const AISTD string DATA_NEW_STATE = "A";// to be sent

const AISTD string DATA_MID_STATE = "M";// sending

const AISTD string DATA_EXIT_STATE = "X";// program exit and not sent

const AISTD string DATA_NO_RESP_STATE = "E";// sending finished but hasn't received the response

const AISTD string DATA_SUCC_STATE = "F";// sending finished
	 */
	@Column(name="STS",columnDefinition="Char",length=1)
	@XmlElement(name="sts")
	private String sts;

	/**
	 * SMS creation timeCreation date
	 */
	@Column(name="GET_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="getDate")
	private Date getDate;

	/**
	 * Reserved
	 */
	@Column(name="PARA1",columnDefinition="Varchar",length=20)
	@XmlElement(name="para1")
	private String para1;

	/**
	 * Reserved
	 */
	@Column(name="PARA2",columnDefinition="Varchar",length=20)
	@XmlElement(name="para2")
	private String para2;

	/**
	 * Reserved
	 */
	@Column(name="PARA3",columnDefinition="Varchar",length=20)
	@XmlElement(name="para3")
	private String para3;

	/**
	 * Sending date
	 */
	@Column(name="SEND_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="sendDate")
	private Date sendDate;

	/**
	 * Reserved
	 */
	@Column(name="RECV",columnDefinition="Varchar",length=20)
	@XmlElement(name="recv")
	private String recv;

	/**
	 * Used to query corresponding REPORT
	 */
	@Column(name="MSG_ID",columnDefinition="Varchar",length=32)
	@XmlElement(name="msgId")
	private String msgId;

	/**
	 * The greater numerical value, the higher priority
	 */
	@Column(name="PRI",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="pri")
	private Integer pri;

	/**
	 * Used to distinguish every time interval
	 */
	@Column(name="ACC_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="accId")
	private Integer accId;

	/**
	 * Upper system serial number, used to query the result
	 */
	@Column(name="DONE_CODE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="doneCode")
	private Long doneCode;

	/**
	 * ????????

?????SYS_LANGUAGE???
	 */
	@Column(name="NOTIFY_LANG",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="notifyLang")
	private Integer notifyLang;

	@Column(name="SEQUENCE_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="sequenceId")
	private Long sequenceId;

	public void setId(Long obj){
		this.id = obj;
	}

	public Long getId(){
		return id;
	}

	public void setMsisdn(String obj){
		this.msisdn = obj;
	}

	public String getMsisdn(){
		return msisdn;
	}

	public void setFlag(String obj){
		this.flag = obj;
	}

	public String getFlag(){
		return flag;
	}

	public void setMsg(String obj){
		this.msg = obj;
	}

	public String getMsg(){
		return msg;
	}

	public void setSts(String obj){
		this.sts = obj;
	}

	public String getSts(){
		return sts;
	}

	public void setGetDate(Date obj){
		this.getDate = obj;
	}

	public Date getGetDate(){
		return getDate;
	}

	public void setPara1(String obj){
		this.para1 = obj;
	}

	public String getPara1(){
		return para1;
	}

	public void setPara2(String obj){
		this.para2 = obj;
	}

	public String getPara2(){
		return para2;
	}

	public void setPara3(String obj){
		this.para3 = obj;
	}

	public String getPara3(){
		return para3;
	}

	public void setSendDate(Date obj){
		this.sendDate = obj;
	}

	public Date getSendDate(){
		return sendDate;
	}

	public void setRecv(String obj){
		this.recv = obj;
	}

	public String getRecv(){
		return recv;
	}

	public void setMsgId(String obj){
		this.msgId = obj;
	}

	public String getMsgId(){
		return msgId;
	}

	public void setPri(Integer obj){
		this.pri = obj;
	}

	public Integer getPri(){
		return pri;
	}

	public void setAccId(Integer obj){
		this.accId = obj;
	}

	public Integer getAccId(){
		return accId;
	}

	public void setDoneCode(Long obj){
		this.doneCode = obj;
	}

	public Long getDoneCode(){
		return doneCode;
	}

	public void setNotifyLang(Integer obj){
		this.notifyLang = obj;
	}

	public Integer getNotifyLang(){
		return notifyLang;
	}

	public void setSequenceId(Long obj){
		this.sequenceId = obj;
	}

	public Long getSequenceId(){
		return sequenceId;
	}

	public SmsInfo(){
	}

	public SmsInfo(Long id){
		this.id = id;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		SmsInfo rhs=(SmsInfo)rhs0;
		if(!ObjectUtils.equals(id, rhs.id)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(id)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{id,msisdn,flag,msg,sts,getDate,para1,para2,para3,sendDate,recv,msgId,pri,accId,doneCode,notifyLang,sequenceId}
}
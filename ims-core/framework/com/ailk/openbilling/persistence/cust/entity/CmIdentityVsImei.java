package com.ailk.openbilling.persistence.cust.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="CD",name="CM_IDENTITY_VS_IMEI")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"resourceId","identityType","identity","imei","forceBinding","createDate","soDate","validDate","expireDate","soNbr","remark"})
public class CmIdentityVsImei extends DataObject{


	@Id
	@Column(name="RESOURCE_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="resourceId")
	private Long resourceId;

	@Column(name="IDENTITY_TYPE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="identityType")
	private Integer identityType;

	@Id
	@Column(name="IDENTITY",columnDefinition="Varchar",length=64)
	@XmlElement(name="identity")
	private String identity;

	@Id
	@Column(name="IMEI",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="imei")
	private Long imei;

	@Column(name="FORCE_BINDING",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="forceBinding")
	private Integer forceBinding;

	@Column(name="CREATE_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="createDate")
	private Date createDate;

	@Column(name="SO_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="soDate")
	private Date soDate;

	@Id
	@Column(name="VALID_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="validDate")
	private Date validDate;

	@Column(name="EXPIRE_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="expireDate")
	private Date expireDate;

	@Id
	@Column(name="SO_NBR",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="soNbr")
	private Long soNbr;

	@Column(name="REMARK",columnDefinition="Varchar",length=255)
	@XmlElement(name="remark")
	private String remark;

	public void setResourceId(Long obj){
		this.resourceId = obj;
	}

	public Long getResourceId(){
		return resourceId;
	}

	public void setIdentityType(Integer obj){
		this.identityType = obj;
	}

	public Integer getIdentityType(){
		return identityType;
	}

	public void setIdentity(String obj){
		this.identity = obj;
	}

	public String getIdentity(){
		return identity;
	}

	public void setImei(Long obj){
		this.imei = obj;
	}

	public Long getImei(){
		return imei;
	}

	public void setForceBinding(Integer obj){
		this.forceBinding = obj;
	}

	public Integer getForceBinding(){
		return forceBinding;
	}

	public void setCreateDate(Date obj){
		this.createDate = obj;
	}

	public Date getCreateDate(){
		return createDate;
	}

	public void setSoDate(Date obj){
		this.soDate = obj;
	}

	public Date getSoDate(){
		return soDate;
	}

	public void setValidDate(Date obj){
		this.validDate = obj;
	}

	public Date getValidDate(){
		return validDate;
	}

	public void setExpireDate(Date obj){
		this.expireDate = obj;
	}

	public Date getExpireDate(){
		return expireDate;
	}

	public void setSoNbr(Long obj){
		this.soNbr = obj;
	}

	public Long getSoNbr(){
		return soNbr;
	}

	public void setRemark(String obj){
		this.remark = obj;
	}

	public String getRemark(){
		return remark;
	}

	public CmIdentityVsImei(){
	}

	public CmIdentityVsImei(Long resourceId,String identity,Long imei,Date validDate,Long soNbr){
		this.resourceId = resourceId;
		this.identity = identity;
		this.imei = imei;
		this.validDate = validDate;
		this.soNbr = soNbr;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		CmIdentityVsImei rhs=(CmIdentityVsImei)rhs0;
		if(!ObjectUtils.equals(identity, rhs.identity)) return false;
		if(!ObjectUtils.equals(resourceId, rhs.resourceId)) return false;
		if(!ObjectUtils.equals(validDate, rhs.validDate)) return false;
		if(!ObjectUtils.equals(imei, rhs.imei)) return false;
		if(!ObjectUtils.equals(soNbr, rhs.soNbr)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(identity)
		.append(resourceId)
		.append(validDate)
		.append(imei)
		.append(soNbr)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{resourceId,identityType,identity,imei,forceBinding,createDate,soDate,validDate,expireDate,soNbr,remark}
}
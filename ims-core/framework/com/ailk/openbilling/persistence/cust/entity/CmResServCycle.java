package com.ailk.openbilling.persistence.cust.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="CD",name="CM_RES_SERV_CYCLE")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"resourceId","serviceSpecId","sts","validDate","expireDate","soNbr","createDate","soDate","usedFlag","firstUsedDate"})
public class CmResServCycle extends DataObject{


	/**
	 * Resource Numbering
	 */
	@Id
	@Column(name="RESOURCE_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="resourceId")
	private Long resourceId;

	/**
	 * Service Numbering

e.g : voice、GPRS、SMS,etc
	 */
	@Id
	@Column(name="SERVICE_SPEC_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="serviceSpecId")
	private Integer serviceSpecId;

	/**
	 * The service state of equitment

find it in the  SYS_STATE_DEF table
0-Close;
1-Active;
2-Suspend
	 */
	@Column(name="STS",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="sts")
	private Integer sts;

	/**
	 * Effective Date
	 */
	@Id
	@Column(name="VALID_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="validDate")
	private Date validDate;

	/**
	 * Expired Date
	 */
	@Column(name="EXPIRE_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="expireDate")
	private Date expireDate;

	/**
	 * The serial order which cause the state changing
	 */
	@Id
	@Column(name="SO_NBR",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="soNbr")
	private Long soNbr;

	@Column(name="CREATE_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="createDate")
	private Date createDate;

	@Column(name="SO_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="soDate")
	private Date soDate;

	@Column(name="USED_FLAG",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="usedFlag")
	private Integer usedFlag;

	@Column(name="FIRST_USED_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="firstUsedDate")
	private Date firstUsedDate;

	public void setResourceId(Long obj){
		this.resourceId = obj;
	}

	public Long getResourceId(){
		return resourceId;
	}

	public void setServiceSpecId(Integer obj){
		this.serviceSpecId = obj;
	}

	public Integer getServiceSpecId(){
		return serviceSpecId;
	}

	public void setSts(Integer obj){
		this.sts = obj;
	}

	public Integer getSts(){
		return sts;
	}

	public void setValidDate(Date obj){
		this.validDate = obj;
	}

	public Date getValidDate(){
		return validDate;
	}

	public void setExpireDate(Date obj){
		this.expireDate = obj;
	}

	public Date getExpireDate(){
		return expireDate;
	}

	public void setSoNbr(Long obj){
		this.soNbr = obj;
	}

	public Long getSoNbr(){
		return soNbr;
	}

	public void setCreateDate(Date obj){
		this.createDate = obj;
	}

	public Date getCreateDate(){
		return createDate;
	}

	public void setSoDate(Date obj){
		this.soDate = obj;
	}

	public Date getSoDate(){
		return soDate;
	}

	public void setUsedFlag(Integer obj){
		this.usedFlag = obj;
	}

	public Integer getUsedFlag(){
		return usedFlag;
	}

	public void setFirstUsedDate(Date obj){
		this.firstUsedDate = obj;
	}

	public Date getFirstUsedDate(){
		return firstUsedDate;
	}

	public CmResServCycle(){
	}

	public CmResServCycle(Long resourceId,Integer serviceSpecId,Date validDate,Long soNbr){
		this.resourceId = resourceId;
		this.serviceSpecId = serviceSpecId;
		this.validDate = validDate;
		this.soNbr = soNbr;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		CmResServCycle rhs=(CmResServCycle)rhs0;
		if(!ObjectUtils.equals(serviceSpecId, rhs.serviceSpecId)) return false;
		if(!ObjectUtils.equals(resourceId, rhs.resourceId)) return false;
		if(!ObjectUtils.equals(validDate, rhs.validDate)) return false;
		if(!ObjectUtils.equals(soNbr, rhs.soNbr)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(serviceSpecId)
		.append(resourceId)
		.append(validDate)
		.append(soNbr)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{resourceId,serviceSpecId,sts,validDate,expireDate,soNbr,createDate,soDate,usedFlag,firstUsedDate}
}
package com.ailk.openbilling.persistence.cust.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 */
@NotModified
@Entity
@Table(schema="CD",name="CO_PROD_PRICE_PARAM")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"priceParamId","productId","paramId","paramValue","validDate","expireDate","soNbr","createDate","soDate","objectId","objectType"})
public class CoProdPriceParam extends DataObject{


	/**
	 * Product parameters intance serial number
	 */
	@Column(name="PRICE_PARAM_ID",precision=15,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="priceParamId")
	private long priceParamId;

	/**
	 * Product instance serial number
	 */
	@Column(name="PRODUCT_ID",precision=15,columnDefinition="NUMBER")
	@XmlElement(name="productId")
	private Long productId;

	/**
	 * Parameters ID
	 */
	@Column(name="PARAM_ID",precision=9,columnDefinition="NUMBER")
	@XmlElement(name="paramId")
	private Integer paramId;

	/**
	 * The value of parameter
	 */
	@Column(name="PARAM_VALUE",columnDefinition="Varchar",length=256)
	@XmlElement(name="paramValue")
	private String paramValue;

	/**
	 * valid date /effective date
	 */
	@Column(name="VALID_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="validDate")
	private Date validDate;

	/**
	 * expire date
	 */
	@Column(name="EXPIRE_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="expireDate")
	private Date expireDate;

	/**
	 * The serial number
	 */
	@Column(name="SO_NBR",precision=15,columnDefinition="NUMBER")
	@XmlElement(name="soNbr")
	private Long soNbr;

	@Column(name="CREATE_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="createDate")
	private Date createDate;

	@Column(name="SO_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="soDate")
	private Date soDate;

	@Column(name="OBJECT_ID",precision=15,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="objectId")
	private long objectId;

	@Column(name="OBJECT_TYPE",precision=4,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="objectType")
	private int objectType;

	public void setPriceParamId(long obj){
		this.priceParamId = obj;
	}

	public long getPriceParamId(){
		return priceParamId;
	}

	public void setProductId(Long obj){
		this.productId = obj;
	}

	public Long getProductId(){
		return productId;
	}

	public void setParamId(Integer obj){
		this.paramId = obj;
	}

	public Integer getParamId(){
		return paramId;
	}

	public void setParamValue(String obj){
		this.paramValue = obj;
	}

	public String getParamValue(){
		return paramValue;
	}

	public void setValidDate(Date obj){
		this.validDate = obj;
	}

	public Date getValidDate(){
		return validDate;
	}

	public void setExpireDate(Date obj){
		this.expireDate = obj;
	}

	public Date getExpireDate(){
		return expireDate;
	}

	public void setSoNbr(Long obj){
		this.soNbr = obj;
	}

	public Long getSoNbr(){
		return soNbr;
	}

	public void setCreateDate(Date obj){
		this.createDate = obj;
	}

	public Date getCreateDate(){
		return createDate;
	}

	public void setSoDate(Date obj){
		this.soDate = obj;
	}

	public Date getSoDate(){
		return soDate;
	}

	public void setObjectId(long obj){
		this.objectId = obj;
	}

	public long getObjectId(){
		return objectId;
	}

	public void setObjectType(int obj){
		this.objectType = obj;
	}

	public int getObjectType(){
		return objectType;
	}

	public CoProdPriceParam(){
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		CoProdPriceParam rhs=(CoProdPriceParam)rhs0;
		if(!ObjectUtils.equals(priceParamId, rhs.priceParamId)) return false;
		if(!ObjectUtils.equals(productId, rhs.productId)) return false;
		if(!ObjectUtils.equals(paramId, rhs.paramId)) return false;
		if(!ObjectUtils.equals(paramValue, rhs.paramValue)) return false;
		if(!ObjectUtils.equals(validDate, rhs.validDate)) return false;
		if(!ObjectUtils.equals(expireDate, rhs.expireDate)) return false;
		if(!ObjectUtils.equals(soNbr, rhs.soNbr)) return false;
		if(!ObjectUtils.equals(createDate, rhs.createDate)) return false;
		if(!ObjectUtils.equals(soDate, rhs.soDate)) return false;
		if(!ObjectUtils.equals(objectId, rhs.objectId)) return false;
		if(!ObjectUtils.equals(objectType, rhs.objectType)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(priceParamId)
		.append(productId)
		.append(paramId)
		.append(paramValue)
		.append(validDate)
		.append(expireDate)
		.append(soNbr)
		.append(createDate)
		.append(soDate)
		.append(objectId)
		.append(objectType)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{priceParamId,productId,paramId,paramValue,validDate,expireDate,soNbr,createDate,soDate,objectId,objectType}
}
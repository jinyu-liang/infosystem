package com.ailk.openbilling.persistence.cust.entity;

import javax.persistence.Table;

import jef.database.DataObject;

import javax.persistence.Id;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;

import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;

import java.util.Date;

import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@Entity
@Table(schema="cd",name="CM_ROUTE_IDENTITY")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"identityId","resourceId","validDate","expireDate","idType","countyCode","regionCode","custId","prepayTag","partitionId"})
public class CmRouteIdentity extends DataObject{


	@Column(name="IDENTITY_ID",columnDefinition="Varchar",length=64)
	@XmlElement(name="identityId")
	private String identityId;

	@Id
	@Column(name="RESOURCE_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="resourceId")
	private Long resourceId;

	@Id
	@Column(name="VALID_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="validDate")
	private Date validDate;

	@Column(name="EXPIRE_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="expireDate")
	private Date expireDate;

	@Column(name="ID_TYPE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="idType")
	private Integer idType;

	@Column(name="COUNTY_CODE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="countyCode")
	private Integer countyCode;

	@Column(name="REGION_CODE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="regionCode")
	private Integer regionCode;

	@Column(name="CUST_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="custId")
	private Long custId;

	@Column(name="PREPAY_TAG",columnDefinition="Char",length=1)
	@XmlElement(name="prepayTag")
	private String prepayTag;
	
	@Column(name="PARTITION_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="partitionId")
	private Integer partitionId;

	public void setIdentityId(String obj){
		this.identityId = obj;
	}

	public String getIdentityId(){
		return identityId;
	}

	public void setResourceId(Long obj){
		this.resourceId = obj;
	}

	public Long getResourceId(){
		return resourceId;
	}

	public void setValidDate(Date obj){
		this.validDate = obj;
	}

	public Date getValidDate(){
		return validDate;
	}

	public void setExpireDate(Date obj){
		this.expireDate = obj;
	}

	public Date getExpireDate(){
		return expireDate;
	}

	public void setIdType(Integer obj){
		this.idType = obj;
	}

	public Integer getIdType(){
		return idType;
	}

	public void setCountyCode(Integer obj){
		this.countyCode = obj;
	}

	public Integer getCountyCode(){
		return countyCode;
	}

	public void setRegionCode(Integer obj){
		this.regionCode = obj;
	}

	public Integer getRegionCode(){
		return regionCode;
	}

	public void setCustId(Long obj){
		this.custId = obj;
	}

	public Long getCustId(){
		return custId;
	}

	public void setPrepayTag(String obj){
		this.prepayTag = obj;
	}

	public String getPrepayTag(){
		return prepayTag;
	}

	
	
	public Integer getPartitionId() {
		return partitionId;
	}

	public void setPartitionId(Integer partitionId) {
		this.partitionId = partitionId;
	}

	public CmRouteIdentity(){
	}

	public CmRouteIdentity(Long resourceId,Date validDate){
		this.resourceId = resourceId;
		this.validDate = validDate;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		CmRouteIdentity rhs=(CmRouteIdentity)rhs0;
		if(!ObjectUtils.equals(resourceId, rhs.resourceId)) return false;
		if(!ObjectUtils.equals(validDate, rhs.validDate)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(resourceId)
		.append(validDate)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{identityId,resourceId,validDate,expireDate,idType,countyCode,regionCode,custId,prepayTag,partitionId}
}
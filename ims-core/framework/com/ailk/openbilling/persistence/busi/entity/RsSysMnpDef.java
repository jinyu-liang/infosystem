package com.ailk.openbilling.persistence.busi.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.GenerationType;
import javax.persistence.GeneratedValue;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 */
@NotModified
@Entity
@Table(schema="BD",name="RS_SYS_MNP_DEF")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"id","mnpPrefix","operatorId","provCode","classId","validDate","expireDate","modifyDate","description"})
public class RsSysMnpDef extends DataObject{


	/**
	 * Record serial number
	 */
	@GeneratedValue(strategy=GenerationType.SEQUENCE)
	@Id
	@Column(name="ID",precision=10,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="id")
	private Integer id;

	/**
	 * MNP prefix, originated from network element, such as 86XXY. XX operator id, Y means province code.
	 */
	@Column(name="MNP_PREFIX",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="mnpPrefix")
	private Integer mnpPrefix;

	/**
	 * 运营商标识  取值sys_operator_def
	 */
	@Column(name="OPERATOR_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="operatorId")
	private Integer operatorId;

	/**
	 * Province code, from sys_region_info
	 */
	@Column(name="PROV_CODE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="provCode")
	private Integer provCode;

	/**
	 * Common number type refer to RS_SYS_NUMBER_CLASS
	 */
	@Column(name="CLASS_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="classId")
	private Integer classId;

	/**
	 * It refers to the date for the record taking effect
	 */
	@Column(name="VALID_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="validDate")
	private Date validDate;

	/**
	 * Expired Date
	 */
	@Column(name="EXPIRE_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="expireDate")
	private Date expireDate;

	/**
	 * Modification Date
	 */
	@Column(name="MODIFY_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="modifyDate")
	private Date modifyDate;

	/**
	 * Description
	 */
	@Column(name="DESCRIPTION",columnDefinition="Varchar",length=512,nullable=false)
	@XmlElement(name="description")
	private String description;

	public void setId(Integer obj){
		this.id = obj;
	}

	public Integer getId(){
		return id;
	}

	public void setMnpPrefix(Integer obj){
		this.mnpPrefix = obj;
	}

	public Integer getMnpPrefix(){
		return mnpPrefix;
	}

	public void setOperatorId(Integer obj){
		this.operatorId = obj;
	}

	public Integer getOperatorId(){
		return operatorId;
	}

	public void setProvCode(Integer obj){
		this.provCode = obj;
	}

	public Integer getProvCode(){
		return provCode;
	}

	public void setClassId(Integer obj){
		this.classId = obj;
	}

	public Integer getClassId(){
		return classId;
	}

	public void setValidDate(Date obj){
		this.validDate = obj;
	}

	public Date getValidDate(){
		return validDate;
	}

	public void setExpireDate(Date obj){
		this.expireDate = obj;
	}

	public Date getExpireDate(){
		return expireDate;
	}

	public void setModifyDate(Date obj){
		this.modifyDate = obj;
	}

	public Date getModifyDate(){
		return modifyDate;
	}

	public void setDescription(String obj){
		this.description = obj;
	}

	public String getDescription(){
		return description;
	}

	public RsSysMnpDef(){
	}

	public RsSysMnpDef(Integer id){
		this.id = id;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		RsSysMnpDef rhs=(RsSysMnpDef)rhs0;
		if(!ObjectUtils.equals(id, rhs.id)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(id)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{id,mnpPrefix,operatorId,provCode,classId,validDate,expireDate,modifyDate,description}
}
package com.ailk.openbilling.persistence.pm.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.GenerationType;
import javax.persistence.GeneratedValue;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="pd",name="PM_PRICE_EVENT")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"itemId","name","serviceSpecId","itemType","subType","description"})
public class PmPriceEvent extends DataObject{


	/**
	 * Billing scenario identifier, item number

Refer to RS_SYS_EVENT_ELEMENT_GEN when it is billing scenario.
	 */
	@GeneratedValue(strategy=GenerationType.SEQUENCE)
	@Id
	@Column(name="ITEM_ID",precision=10,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="itemId")
	private Integer itemId;

	/**
	 * Item names
	 */
	@Column(name="NAME",columnDefinition="Varchar",length=256,nullable=false)
	@XmlElement(name="name")
	private String name;

	/**
	 * Billing virtual items,  filling in specification ID of the service, others can defaulted as 0
	 */
	@Column(name="SERVICE_SPEC_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="serviceSpecId")
	private Integer serviceSpecId;

	/**
	 * 0ฃญฑฃม๔
1ฃญทฮ๑สนำรสยผฟฦฤฟฃฌถิำฆผฦทัอ๘ิชฒ๚ษ๚ตฤสยผ;(Service Usage)
2ฃญึฦฺทัสยผฟฦฤฟ;(Recurring Usage)
3ฃญาปดฮะิทัำรสยผฟฦฤฟฃฌถิำฆาตฮ๑ทัฃฌศ็ฟจทักขณ๕ืฐทัตศ;(One Time Charge)
4ฃญผฦหฐฟฦฤฟ
5ฃญำลปฟฦฤฟ
6ฃญด๚สีฟฦฤฟ
	 */
	@Column(name="ITEM_TYPE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="itemType")
	private Integer itemType;

	/**
	 * ถิำฺอ๘ิชผฦทัสยผฟฦฤฟฃบ
   0ฃญป๙ฑพฟฦฤฟ
   1ฃญณคอพฟฦฤฟ
   2ฃญะลฯขฟฦฤฟ
   3ฃญิ๖ึตฟฦฤฟ
	 */
	@Column(name="SUB_TYPE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="subType")
	private Integer subType;

	/**
	 * description about item
	 */
	@Column(name="DESCRIPTION",columnDefinition="Varchar",length=1024)
	@XmlElement(name="description")
	private String description;

	public void setItemId(Integer obj){
		this.itemId = obj;
	}

	public Integer getItemId(){
		return itemId;
	}

	public void setName(String obj){
		this.name = obj;
	}

	public String getName(){
		return name;
	}

	public void setServiceSpecId(Integer obj){
		this.serviceSpecId = obj;
	}

	public Integer getServiceSpecId(){
		return serviceSpecId;
	}

	public void setItemType(Integer obj){
		this.itemType = obj;
	}

	public Integer getItemType(){
		return itemType;
	}

	public void setSubType(Integer obj){
		this.subType = obj;
	}

	public Integer getSubType(){
		return subType;
	}

	public void setDescription(String obj){
		this.description = obj;
	}

	public String getDescription(){
		return description;
	}

	public PmPriceEvent(){
	}

	public PmPriceEvent(Integer itemId){
		this.itemId = itemId;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		PmPriceEvent rhs=(PmPriceEvent)rhs0;
		if(!ObjectUtils.equals(itemId, rhs.itemId)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(itemId)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{itemId,name,serviceSpecId,itemType,subType,description}
}
package com.ailk.openbilling.persistence.pm.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 */
@NotModified
@Entity
@Table(schema="pd",name="PM_PAYFOR_REGULATION")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"priceRuleId","regulationSpecId","payforType","useMode","state","validMode","expireMode","paymentType","validDate","expireDate"})
public class PmPayforRegulation extends DataObject{


	@Id
	@Column(name="PRICE_RULE_ID",precision=10,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="priceRuleId")
	private Integer priceRuleId;

	@Column(name="REGULATION_SPEC_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="regulationSpecId")
	private Integer regulationSpecId;

	@Column(name="PAYFOR_TYPE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="payforType")
	private Integer payforType;

	@Column(name="USE_MODE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="useMode")
	private Integer useMode;

	@Column(name="STATE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="state")
	private Integer state;

	@Column(name="VALID_MODE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="validMode")
	private Integer validMode;

	@Column(name="EXPIRE_MODE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="expireMode")
	private Integer expireMode;

	@Column(name="PAYMENT_TYPE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="paymentType")
	private Integer paymentType;

	@Column(name="VALID_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="validDate")
	private Date validDate;

	@Column(name="EXPIRE_DATE",columnDefinition="TimeStamp")
	@XmlElement(name="expireDate")
	private Date expireDate;

	public void setPriceRuleId(Integer obj){
		this.priceRuleId = obj;
	}

	public Integer getPriceRuleId(){
		return priceRuleId;
	}

	public void setRegulationSpecId(Integer obj){
		this.regulationSpecId = obj;
	}

	public Integer getRegulationSpecId(){
		return regulationSpecId;
	}

	public void setPayforType(Integer obj){
		this.payforType = obj;
	}

	public Integer getPayforType(){
		return payforType;
	}

	public void setUseMode(Integer obj){
		this.useMode = obj;
	}

	public Integer getUseMode(){
		return useMode;
	}

	public void setState(Integer obj){
		this.state = obj;
	}

	public Integer getState(){
		return state;
	}

	public void setValidMode(Integer obj){
		this.validMode = obj;
	}

	public Integer getValidMode(){
		return validMode;
	}

	public void setExpireMode(Integer obj){
		this.expireMode = obj;
	}

	public Integer getExpireMode(){
		return expireMode;
	}

	public void setPaymentType(Integer obj){
		this.paymentType = obj;
	}

	public Integer getPaymentType(){
		return paymentType;
	}

	public void setValidDate(Date obj){
		this.validDate = obj;
	}

	public Date getValidDate(){
		return validDate;
	}

	public void setExpireDate(Date obj){
		this.expireDate = obj;
	}

	public Date getExpireDate(){
		return expireDate;
	}

	public PmPayforRegulation(){
	}

	public PmPayforRegulation(Integer priceRuleId){
		this.priceRuleId = priceRuleId;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		PmPayforRegulation rhs=(PmPayforRegulation)rhs0;
		if(!ObjectUtils.equals(priceRuleId, rhs.priceRuleId)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(priceRuleId)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{priceRuleId,regulationSpecId,payforType,useMode,state,validMode,expireMode,paymentType,validDate,expireDate}
}
package com.ailk.openbilling.persistence.pm.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.GenerationType;
import javax.persistence.GeneratedValue;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="PD",name="PM_RENT_DEDUCT_ACTION")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"failureActionId","actType","alarmId","targetMainOffer","changeType","description"})
public class PmRentDeductAction extends DataObject{


	/**
	 * Processing rules after recurring fee deduction failure
	 */
	@GeneratedValue(strategy=GenerationType.SEQUENCE)
	@Id
	@Column(name="FAILURE_ACTION_ID",precision=10,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="failureActionId")
	private Integer failureActionId;

	/**
	 * Action type after recurring fee deduction failure:
0: No processing
1: Deduction failure suspend for promotion product offering
2: deduction failure of main promotion leads to special stauts
3: Main product offering switch (Change main product offering N days later)
	 */
	@Column(name="ACT_TYPE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="actType")
	private Integer actType;

	/**
	 * Notification rule corresponding to action
	 */
	@Column(name="ALARM_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="alarmId")
	private Integer alarmId;

	/**
	 * Replace the original product offering with new main product ID N days after deduction failure
The filed is configured only for main product
	 */
	@Column(name="TARGET_MAIN_OFFER",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="targetMainOffer")
	private Integer targetMainOffer;

	/**
	 * 0：main product unable to change
1：main product change temporary, able to change
	 */
	@Column(name="CHANGE_TYPE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="changeType")
	private Integer changeType;

	/**
	 * description
	 */
	@Column(name="DESCRIPTION",columnDefinition="Varchar",length=1024,nullable=false)
	@XmlElement(name="description")
	private String description;

	public void setFailureActionId(Integer obj){
		this.failureActionId = obj;
	}

	public Integer getFailureActionId(){
		return failureActionId;
	}

	public void setActType(Integer obj){
		this.actType = obj;
	}

	public Integer getActType(){
		return actType;
	}

	public void setAlarmId(Integer obj){
		this.alarmId = obj;
	}

	public Integer getAlarmId(){
		return alarmId;
	}

	public void setTargetMainOffer(Integer obj){
		this.targetMainOffer = obj;
	}

	public Integer getTargetMainOffer(){
		return targetMainOffer;
	}

	public void setChangeType(Integer obj){
		this.changeType = obj;
	}

	public Integer getChangeType(){
		return changeType;
	}

	public void setDescription(String obj){
		this.description = obj;
	}

	public String getDescription(){
		return description;
	}

	public PmRentDeductAction(){
	}

	public PmRentDeductAction(Integer failureActionId){
		this.failureActionId = failureActionId;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		PmRentDeductAction rhs=(PmRentDeductAction)rhs0;
		if(!ObjectUtils.equals(failureActionId, rhs.failureActionId)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(failureActionId)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{failureActionId,actType,alarmId,targetMainOffer,changeType,description}
}
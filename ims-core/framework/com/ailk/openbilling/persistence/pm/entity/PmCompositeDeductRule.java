package com.ailk.openbilling.persistence.pm.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 */
@NotModified
@Entity
@Table(schema="pd",name="PM_COMPOSITE_DEDUCT_RULE")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"productOfferingId","deductFlag","rentDeductRuleId","prorateDeductRuleId","redoAfTopup","negativeFlag","isChangeBillCycle","failureRuleId","retryTime","cycleType","cycleUnit","billingType","needAuth","isPerBill","intervalCycleType","intervalCycleUnit","retryMode","retryCycles","mainPromotion"})
public class PmCompositeDeductRule extends DataObject{


	/**
	 * A unique identifier for the product offering.
	 */
	@Id
	@Column(name="PRODUCT_OFFERING_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="productOfferingId")
	private Integer productOfferingId;

	/**
	 * ีหฮ๑ทัำรฟทัทฝสฝ 0--ิคฟ 1--บ๓ฟ
	 */
	@Column(name="DEDUCT_FLAG",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="deductFlag")
	private Integer deductFlag;

	/**
	 * นฬทัฟผ๕สงฐนๆิ๒
	 */
	@Column(name="RENT_DEDUCT_RULE_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="rentDeductRuleId")
	private Integer rentDeductRuleId;

	@Column(name="PRORATE_DEDUCT_RULE_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="prorateDeductRuleId")
	private Integer prorateDeductRuleId;

	@Column(name="REDO_AF_TOPUP",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="redoAfTopup")
	private Integer redoAfTopup;

	@Column(name="NEGATIVE_FLAG",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="negativeFlag")
	private Integer negativeFlag;

	@Column(name="IS_CHANGE_BILL_CYCLE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="isChangeBillCycle")
	private Integer isChangeBillCycle;

	@Column(name="FAILURE_RULE_ID",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="failureRuleId")
	private Integer failureRuleId;

	@Column(name="RETRY_TIME",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="retryTime")
	private Integer retryTime;

	@Column(name="CYCLE_TYPE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="cycleType")
	private Integer cycleType;

	@Column(name="CYCLE_UNIT",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="cycleUnit")
	private Integer cycleUnit;

	@Id
	@Column(name="BILLING_TYPE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="billingType")
	private Integer billingType;

	@Column(name="NEED_AUTH",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="needAuth")
	private Integer needAuth;

	@Column(name="IS_PER_BILL",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="isPerBill")
	private Integer isPerBill;

	@Column(name="INTERVAL_CYCLE_TYPE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="intervalCycleType")
	private Integer intervalCycleType;

	@Column(name="INTERVAL_CYCLE_UNIT",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="intervalCycleUnit")
	private Integer intervalCycleUnit;

	@Column(name="RETRY_MODE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="retryMode")
	private Integer retryMode;

	@Column(name="RETRY_CYCLES",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="retryCycles")
	private Integer retryCycles;

	@Id
	@Column(name="MAIN_PROMOTION",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="mainPromotion")
	private Integer mainPromotion;

	public void setProductOfferingId(Integer obj){
		this.productOfferingId = obj;
	}

	public Integer getProductOfferingId(){
		return productOfferingId;
	}

	public void setDeductFlag(Integer obj){
		this.deductFlag = obj;
	}

	public Integer getDeductFlag(){
		return deductFlag;
	}

	public void setRentDeductRuleId(Integer obj){
		this.rentDeductRuleId = obj;
	}

	public Integer getRentDeductRuleId(){
		return rentDeductRuleId;
	}

	public void setProrateDeductRuleId(Integer obj){
		this.prorateDeductRuleId = obj;
	}

	public Integer getProrateDeductRuleId(){
		return prorateDeductRuleId;
	}

	public void setRedoAfTopup(Integer obj){
		this.redoAfTopup = obj;
	}

	public Integer getRedoAfTopup(){
		return redoAfTopup;
	}

	public void setNegativeFlag(Integer obj){
		this.negativeFlag = obj;
	}

	public Integer getNegativeFlag(){
		return negativeFlag;
	}

	public void setIsChangeBillCycle(Integer obj){
		this.isChangeBillCycle = obj;
	}

	public Integer getIsChangeBillCycle(){
		return isChangeBillCycle;
	}

	public void setFailureRuleId(Integer obj){
		this.failureRuleId = obj;
	}

	public Integer getFailureRuleId(){
		return failureRuleId;
	}

	public void setRetryTime(Integer obj){
		this.retryTime = obj;
	}

	public Integer getRetryTime(){
		return retryTime;
	}

	public void setCycleType(Integer obj){
		this.cycleType = obj;
	}

	public Integer getCycleType(){
		return cycleType;
	}

	public void setCycleUnit(Integer obj){
		this.cycleUnit = obj;
	}

	public Integer getCycleUnit(){
		return cycleUnit;
	}

	public void setBillingType(Integer obj){
		this.billingType = obj;
	}

	public Integer getBillingType(){
		return billingType;
	}

	public void setNeedAuth(Integer obj){
		this.needAuth = obj;
	}

	public Integer getNeedAuth(){
		return needAuth;
	}

	public void setIsPerBill(Integer obj){
		this.isPerBill = obj;
	}

	public Integer getIsPerBill(){
		return isPerBill;
	}

	public void setIntervalCycleType(Integer obj){
		this.intervalCycleType = obj;
	}

	public Integer getIntervalCycleType(){
		return intervalCycleType;
	}

	public void setIntervalCycleUnit(Integer obj){
		this.intervalCycleUnit = obj;
	}

	public Integer getIntervalCycleUnit(){
		return intervalCycleUnit;
	}

	public void setRetryMode(Integer obj){
		this.retryMode = obj;
	}

	public Integer getRetryMode(){
		return retryMode;
	}

	public void setRetryCycles(Integer obj){
		this.retryCycles = obj;
	}

	public Integer getRetryCycles(){
		return retryCycles;
	}

	public void setMainPromotion(Integer obj){
		this.mainPromotion = obj;
	}

	public Integer getMainPromotion(){
		return mainPromotion;
	}

	public PmCompositeDeductRule(){
	}

	public PmCompositeDeductRule(Integer productOfferingId,Integer billingType,Integer mainPromotion){
		this.productOfferingId = productOfferingId;
		this.billingType = billingType;
		this.mainPromotion = mainPromotion;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		PmCompositeDeductRule rhs=(PmCompositeDeductRule)rhs0;
		if(!ObjectUtils.equals(mainPromotion, rhs.mainPromotion)) return false;
		if(!ObjectUtils.equals(billingType, rhs.billingType)) return false;
		if(!ObjectUtils.equals(productOfferingId, rhs.productOfferingId)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(mainPromotion)
		.append(billingType)
		.append(productOfferingId)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{productOfferingId,deductFlag,rentDeductRuleId,prorateDeductRuleId,redoAfTopup,negativeFlag,isChangeBillCycle,failureRuleId,retryTime,cycleType,cycleUnit,billingType,needAuth,isPerBill,intervalCycleType,intervalCycleUnit,retryMode,retryCycles,mainPromotion}
}
package com.ailk.openbilling.persistence.pm.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="PD",name="PM_PRODUCT_OFFER_COMPOSITE")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"parentProductOfferingId","productOfferingId","lowerLimit","upperLimit"})
public class PmProductOfferComposite extends DataObject{


	/**
	 * product offering composite
	 */
	@Id
	@Column(name="PARENT_PRODUCT_OFFERING_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="parentProductOfferingId")
	private Integer parentProductOfferingId;

	/**
	 * A unique identifier for the product offering.
	 */
	@Id
	@Column(name="PRODUCT_OFFERING_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="productOfferingId")
	private Integer productOfferingId;

	/**
	 * subsidiary product offering's lower limit in product offering composite
	 */
	@Column(name="LOWER_LIMIT",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="lowerLimit")
	private Long lowerLimit;

	/**
	 * subsidiary product offering's lower limit in product offering composite
	 */
	@Column(name="UPPER_LIMIT",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="upperLimit")
	private Long upperLimit;

	public void setParentProductOfferingId(Integer obj){
		this.parentProductOfferingId = obj;
	}

	public Integer getParentProductOfferingId(){
		return parentProductOfferingId;
	}

	public void setProductOfferingId(Integer obj){
		this.productOfferingId = obj;
	}

	public Integer getProductOfferingId(){
		return productOfferingId;
	}

	public void setLowerLimit(Long obj){
		this.lowerLimit = obj;
	}

	public Long getLowerLimit(){
		return lowerLimit;
	}

	public void setUpperLimit(Long obj){
		this.upperLimit = obj;
	}

	public Long getUpperLimit(){
		return upperLimit;
	}

	public PmProductOfferComposite(){
	}

	public PmProductOfferComposite(Integer parentProductOfferingId,Integer productOfferingId){
		this.parentProductOfferingId = parentProductOfferingId;
		this.productOfferingId = productOfferingId;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		PmProductOfferComposite rhs=(PmProductOfferComposite)rhs0;
		if(!ObjectUtils.equals(parentProductOfferingId, rhs.parentProductOfferingId)) return false;
		if(!ObjectUtils.equals(productOfferingId, rhs.productOfferingId)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(parentProductOfferingId)
		.append(productOfferingId)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{parentProductOfferingId,productOfferingId,lowerLimit,upperLimit}
}
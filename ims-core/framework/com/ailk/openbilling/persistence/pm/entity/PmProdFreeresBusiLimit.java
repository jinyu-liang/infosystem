package com.ailk.openbilling.persistence.pm.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 */
@NotModified
@Entity
@Table(schema="PD",name="PM_PROD_FREERES_BUSI_LIMIT")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"productOfferingId","billingType","triggerEvent","persistFlag","freeresFlag"})
public class PmProdFreeresBusiLimit extends DataObject{


	/**
	 * A unique identifier for the product offering.
	 */
	@Id
	@Column(name="PRODUCT_OFFERING_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="productOfferingId")
	private Integer productOfferingId;

	/**
	 * 0: prepaid 1: postpaid
	 */
	@Id
	@Column(name="BILLING_TYPE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="billingType")
	private Integer billingType;

	/**
	 * -1:all event 0:Users active request Terminate products 1:Change BA 2:Change Owner
	 */
	@Id
	@Column(name="TRIGGER_EVENT",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="triggerEvent")
	private Integer triggerEvent;

	/**
	 * -1:No reference 0:Dont keep products 1:keep products
	 */
	@Id
	@Column(name="PERSIST_FLAG",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="persistFlag")
	private Integer persistFlag;

	/**
	 * 0:???????????(??????????????,????????) 1:???????????(???????????????????)
	 */
	@Column(name="FREERES_FLAG",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="freeresFlag")
	private Integer freeresFlag;

	public void setProductOfferingId(Integer obj){
		this.productOfferingId = obj;
	}

	public Integer getProductOfferingId(){
		return productOfferingId;
	}

	public void setBillingType(Integer obj){
		this.billingType = obj;
	}

	public Integer getBillingType(){
		return billingType;
	}

	public void setTriggerEvent(Integer obj){
		this.triggerEvent = obj;
	}

	public Integer getTriggerEvent(){
		return triggerEvent;
	}

	public void setPersistFlag(Integer obj){
		this.persistFlag = obj;
	}

	public Integer getPersistFlag(){
		return persistFlag;
	}

	public void setFreeresFlag(Integer obj){
		this.freeresFlag = obj;
	}

	public Integer getFreeresFlag(){
		return freeresFlag;
	}

	public PmProdFreeresBusiLimit(){
	}

	public PmProdFreeresBusiLimit(Integer productOfferingId,Integer billingType,Integer triggerEvent,Integer persistFlag){
		this.productOfferingId = productOfferingId;
		this.billingType = billingType;
		this.triggerEvent = triggerEvent;
		this.persistFlag = persistFlag;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		PmProdFreeresBusiLimit rhs=(PmProdFreeresBusiLimit)rhs0;
		if(!ObjectUtils.equals(triggerEvent, rhs.triggerEvent)) return false;
		if(!ObjectUtils.equals(persistFlag, rhs.persistFlag)) return false;
		if(!ObjectUtils.equals(billingType, rhs.billingType)) return false;
		if(!ObjectUtils.equals(productOfferingId, rhs.productOfferingId)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(triggerEvent)
		.append(persistFlag)
		.append(billingType)
		.append(productOfferingId)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{productOfferingId,billingType,triggerEvent,persistFlag,freeresFlag}
}
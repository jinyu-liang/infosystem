package com.ailk.openbilling.persistence.pm.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.GenerationType;
import javax.persistence.GeneratedValue;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.Date;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 */
@NotModified
@Entity
@Table(schema="pd",name="PM_SERVICE_SPEC")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"serviceSpecId","name","type","spcFlag","validDate","expireDate","description"})
public class PmServiceSpec extends DataObject{


	/**
	 * Service ID
	 */
	@GeneratedValue(strategy=GenerationType.SEQUENCE)
	@Id
	@Column(name="SERVICE_SPEC_ID",precision=10,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="serviceSpecId")
	private Integer serviceSpecId;

	/**
	 * Service name
	 */
	@Column(name="NAME",columnDefinition="Varchar",length=256,nullable=false)
	@XmlElement(name="name")
	private String name;

	/**
	 * Service type definition mainly is used for identifying primary service and program control service. Primary service refers to service which is related with rating, such as GSM, GPRS,SMS, etc.    Program control service refers to service which is related with program control functionality, such as caller display, voice, etc.    0- the service which does not define type    1- primary service    2- program control service    3- business service.    4- physical service    5- main service of key product(PLAN)    Defintion for main service is as follows:    GSM    CDMA
	 */
	@Column(name="TYPE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="type")
	private Integer type;

	/**
	 * 程控标识：    0: 非程控    1: 是程控，不需要发开通    2: 是程控，需要发开通
	 */
	@Column(name="SPC_FLAG",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="spcFlag")
	private Integer spcFlag;

	/**
	 * Effective date
	 */
	@Column(name="VALID_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="validDate")
	private Date validDate;

	/**
	 * Expired date
	 */
	@Column(name="EXPIRE_DATE",columnDefinition="TimeStamp",nullable=false)
	@XmlElement(name="expireDate")
	private Date expireDate;

	/**
	 * Description
	 */
	@Column(name="DESCRIPTION",columnDefinition="Varchar",length=1024)
	@XmlElement(name="description")
	private String description;

	public void setServiceSpecId(Integer obj){
		this.serviceSpecId = obj;
	}

	public Integer getServiceSpecId(){
		return serviceSpecId;
	}

	public void setName(String obj){
		this.name = obj;
	}

	public String getName(){
		return name;
	}

	public void setType(Integer obj){
		this.type = obj;
	}

	public Integer getType(){
		return type;
	}

	public void setSpcFlag(Integer obj){
		this.spcFlag = obj;
	}

	public Integer getSpcFlag(){
		return spcFlag;
	}

	public void setValidDate(Date obj){
		this.validDate = obj;
	}

	public Date getValidDate(){
		return validDate;
	}

	public void setExpireDate(Date obj){
		this.expireDate = obj;
	}

	public Date getExpireDate(){
		return expireDate;
	}

	public void setDescription(String obj){
		this.description = obj;
	}

	public String getDescription(){
		return description;
	}

	public PmServiceSpec(){
	}

	public PmServiceSpec(Integer serviceSpecId){
		this.serviceSpecId = serviceSpecId;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		PmServiceSpec rhs=(PmServiceSpec)rhs0;
		if(!ObjectUtils.equals(serviceSpecId, rhs.serviceSpecId)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(serviceSpecId)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{serviceSpecId,name,type,spcFlag,validDate,expireDate,description}
}
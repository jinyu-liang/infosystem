package com.ailk.openbilling.persistence.pm.entity;

import javax.persistence.Table;
import jef.database.DataObject;
import javax.persistence.Id;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAccessType;
import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import jef.codegen.support.NotModified;
/**
 * This class was generated by EasyFrame according to the table in database.
 * You need to modify the type of primary key field, to the strategy your own.
 * 
 */
@NotModified
@Entity
@Table(schema="pd",name="PM_ALLOWANCE_FREE_USAGE")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder={"allowanceRuleId","freeresItem","amount","immediateEffect","cycleUnitNoim","cycleTypeNoim","forwardCycle","cycleRefMode"})
public class PmAllowanceFreeUsage extends DataObject{


	/**
	 * reward identifier,corresponding to PM_ALLOWANCE_REGULATION.ALLOWANCE_RULE_ID
	 */
	@Id
	@Column(name="ALLOWANCE_RULE_ID",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="allowanceRuleId")
	private Integer allowanceRuleId;

	/**
	 * subject of reward free resource. reward several subjects in one time.
	 */
	@Id
	@Column(name="FREERES_ITEM",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="freeresItem")
	private Integer freeresItem;

	/**
	 * Amount of reward free resource. unit is determined by attribute of free resource
	 */
	@Column(name="AMOUNT",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="amount")
	private Long amount;

	@Column(name="IMMEDIATE_EFFECT",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="immediateEffect")
	private Integer immediateEffect;

	@Column(name="CYCLE_UNIT_NOIM",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="cycleUnitNoim")
	private Integer cycleUnitNoim;

	@Column(name="CYCLE_TYPE_NOIM",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="cycleTypeNoim")
	private Integer cycleTypeNoim;

	@Column(name="FORWARD_CYCLE",precision=8,columnDefinition="NUMBER",nullable=false)
	@XmlElement(name="forwardCycle")
	private Integer forwardCycle;

	@Column(name="CYCLE_REF_MODE",precision=8,columnDefinition="NUMBER")
	@XmlElement(name="cycleRefMode")
	private Integer cycleRefMode;

	public void setAllowanceRuleId(Integer obj){
		this.allowanceRuleId = obj;
	}

	public Integer getAllowanceRuleId(){
		return allowanceRuleId;
	}

	public void setFreeresItem(Integer obj){
		this.freeresItem = obj;
	}

	public Integer getFreeresItem(){
		return freeresItem;
	}

	public void setAmount(Long obj){
		this.amount = obj;
	}

	public Long getAmount(){
		return amount;
	}

	public void setImmediateEffect(Integer obj){
		this.immediateEffect = obj;
	}

	public Integer getImmediateEffect(){
		return immediateEffect;
	}

	public void setCycleUnitNoim(Integer obj){
		this.cycleUnitNoim = obj;
	}

	public Integer getCycleUnitNoim(){
		return cycleUnitNoim;
	}

	public void setCycleTypeNoim(Integer obj){
		this.cycleTypeNoim = obj;
	}

	public Integer getCycleTypeNoim(){
		return cycleTypeNoim;
	}

	public void setForwardCycle(Integer obj){
		this.forwardCycle = obj;
	}

	public Integer getForwardCycle(){
		return forwardCycle;
	}

	public void setCycleRefMode(Integer obj){
		this.cycleRefMode = obj;
	}

	public Integer getCycleRefMode(){
		return cycleRefMode;
	}

	public PmAllowanceFreeUsage(){
	}

	public PmAllowanceFreeUsage(Integer allowanceRuleId,Integer freeresItem){
		this.allowanceRuleId = allowanceRuleId;
		this.freeresItem = freeresItem;
	}

	public boolean equals(final Object rhs0){
		if (rhs0 == null)return false;
		PmAllowanceFreeUsage rhs=(PmAllowanceFreeUsage)rhs0;
		if(!ObjectUtils.equals(freeresItem, rhs.freeresItem)) return false;
		if(!ObjectUtils.equals(allowanceRuleId, rhs.allowanceRuleId)) return false;
		return super.isEquals(rhs);
	}

	public int hashCode(){
		return new HashCodeBuilder()
		.append(freeresItem)
		.append(allowanceRuleId)
		.append(super.getHashCode())
		.toHashCode();
	}


public enum Field implements jef.database.Field{allowanceRuleId,freeresItem,amount,immediateEffect,cycleUnitNoim,cycleTypeNoim,forwardCycle,cycleRefMode}
}
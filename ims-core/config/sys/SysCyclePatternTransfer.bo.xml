<?xml version="1.0" encoding="UTF-8"?>
<entity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="SysCyclePatternTransfer" remark="" schema="sd" table="SYS_CYCLE_PATTERN_TRANSFER" xsi:noNamespaceSchemaLocation="http://10.10.10.149/easyframe/schema/entity.xsd">
<fields>
<field column="PATTERN_ID" columnDef="Int" isPk="true(not generated)" name="patternId" null-able="false" primitive="No" remark="Pattern ID" type="Integer"/>
<field column="STS_FROM" columnDef="Int" isPk="true(not generated)" name="stsFrom" null-able="false" primitive="No" remark="State from" type="Integer"/>
<field column="OS_STS_FROM" columnDef="Int" isPk="true(not generated)" name="osStsFrom" null-able="false" primitive="No" remark="10:normal&#10;11:outgoing call barring&#10;12:call barring" type="Integer"/>
<field column="STS_TO" columnDef="Int" isPk="true(not generated)" name="stsTo" null-able="false" primitive="No" remark="State to" type="Integer"/>
<field column="OS_STS_TO" columnDef="Int" isPk="true(not generated)" name="osStsTo" null-able="false" primitive="No" remark="10:normal&#10;11:outgoing call barring&#10;12:call barring" type="Integer"/>
<field column="POLICY_ID" columnDef="Int" name="policyId" primitive="No" remark="Policy identifier: when value=0, it refers to always true." type="Integer"/>
<field column="B_NOTIFICATION_CODE" columnDef="Int" name="bNotificationCode" null-able="false" primitive="No" remark="Notification rule before changing:&#10;Not send SMS to customer if null.&#10;" type="Integer"/>
<field column="A_NOTIFICATION_CODE" columnDef="Int" name="aNotificationCode" null-able="false" primitive="No" remark="Notification rule after changing:&#10;Not send SMS to customer if null.&#10;&#10;" type="Integer"/>
<field column="VALID_DAYS" columnDef="Int" name="validDays" null-able="false" primitive="No" remark="Effective days of new state:&#10;When value=0, it is not necessary to modify previous date.&#10;For example,If one customer gets a disount on his/her birthday which will not invlove in recurring table's date.&#10;" type="Integer"/>
<field column="TRIGGER_EVENT_TYPE" columnDef="Int" isPk="true(not generated)" name="triggerEventType" null-able="false" primitive="No" remark="Used to define the life cycle change which is triggered by system time, take no_validity as an example, it will change from active to suspend-novalidity.&#10;&#10;1: CRM_Request, including most cycle life change of postpaid subscriber, from webservice interface of lifecyclemgnt.&#10;2: Balance_Change, from top-up/usage-rating, etc. In domestic, it will trigger suspending if there’s no sufficient balance. But AIS requests that it won’t suspend if there’s no sufficient balance, without any action. If the balance is greater than 0 after balance change, it can trigger service connection of prepaid subscriber.&#10;3: Account_Validity_Change, AIS requests that it will trigger the action of suspending when account book becomes invalid. IMS will scan the valid date, and automatically notify the life cycle module to suspend once it becomes invalid. Valid date prolonging and balance change generally occur in the same time, and the accounting module should affirm that which event to be triggered, or both.&#10;4: State_Expire, after subscriber coming into a state of suspending, it may come into a state of disable after a period of time, and expiration event triggered this life cycle change. IMS will scan subscriber state table, and will automatically trigger StateExpire event when life cycle becomes expired, and notify life cycle module to modify subscriber state.&#10;5: Disable, when subscriber comes into a state of Disable, it will notify accounting module to conduct a series of operations such as balance clearance, and these operations are triggered by this event.&#10;Two detailed triggering modes are as follows:&#10;1. throw the event to cloud platform, and accounting module will register at the cloud platform to process this event;&#10;2. By policy configuration, and call policy directly when event occurs." type="Integer"/>
<field column="FIRE_EVENT_TYPE" columnDef="Varchar" columnSize="5" name="fireEventType" primitive="No" remark="" type="String"/>
</fields>
</entity>
